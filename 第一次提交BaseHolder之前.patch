Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,20 @@
+<resources>
+
+    <!--
+        Base application theme, dependent on API level. This theme is replaced
+        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
+    -->
+    <style name="AppBaseTheme" parent="android:Theme.Light">
+        <!--
+            Theme customizations available in newer API levels can go in
+            res/values-vXX/styles.xml, while customizations related to
+            backward-compatibility can go here.
+        -->
+    </style>
+
+    <!-- Application theme. -->
+    <style name="AppTheme" parent="AppBaseTheme">
+        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
+    </style>
+
+</resources>
\ No newline at end of file
Index: library/res/drawable/background_tab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/res/drawable/background_tab.xml	(revision )
+++ library/res/drawable/background_tab.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" android:exitFadeDuration="@android:integer/config_shortAnimTime">
+
+    <item android:state_pressed="true" android:drawable="@color/background_tab_pressed" />
+    <item android:state_focused="true" android:drawable="@color/background_tab_pressed"/>
+    <item android:drawable="@android:color/transparent"/>
+
+</selector>
\ No newline at end of file
Index: library/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/res/values/attrs.xml	(revision )
+++ library/res/values/attrs.xml	(revision )
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <declare-styleable name="PagerSlidingTabStrip">
+        <attr name="pstsIndicatorColor" format="color" />
+        <attr name="pstsUnderlineColor" format="color" />
+        <attr name="pstsDividerColor" format="color" />
+        <attr name="pstsIndicatorHeight" format="dimension" />
+        <attr name="pstsUnderlineHeight" format="dimension" />
+        <attr name="pstsDividerPadding" format="dimension" />
+        <attr name="pstsTabPaddingLeftRight" format="dimension" />
+        <attr name="pstsScrollOffset" format="dimension" />
+        <attr name="pstsTabBackground" format="reference" />
+        <attr name="pstsShouldExpand" format="boolean" />
+        <attr name="pstsTextAllCaps" format="boolean" />
+        <!-- 添加4个属性 -->
+        <attr name="pstsTabTextSize" format="dimension" />
+        <attr name="pstsTabTextColor" format="color" />
+        
+        <attr name="pstsSelectedTabTextSize" format="dimension" />
+        <attr name="pstsSelectedTabTextColor" format="color" />
+    </declare-styleable>
+
+</resources>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision )
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -0,0 +1,6 @@
+#Wed Oct 21 11:34:03 PDT 2015
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip
Index: app/src/main/java/com/project/fragment/GameFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/GameFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/GameFragment.java	(revision )
@@ -0,0 +1,41 @@
+package com.project.fragment;
+
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.support.annotation.Nullable;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class GameFragment extends BaseFragment {
+    @Override
+    public LoadingPager.LoadedResult initData() {// 真正加载数据
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+            // 返回成功的视图
+            TextView tv = new TextView(UIUtils.getContext());
+            tv.setText(this.getClass().getSimpleName());
+            return tv;
+    }
+}
Index: app/src/main/java/com/project/fragment/SubjectFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/SubjectFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/SubjectFragment.java	(revision )
@@ -0,0 +1,40 @@
+package com.project.fragment;
+
+
+import android.os.SystemClock;
+
+import android.view.View;
+
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class SubjectFragment extends BaseFragment {
+    @Override
+    public LoadingPager.LoadedResult initData() {// 真正加载数据
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+        // 返回成功的视图
+        TextView tv = new TextView(UIUtils.getContext());
+        tv.setText(this.getClass().getSimpleName());
+        return tv;
+    }
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,27 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
+
+    defaultConfig {
+        applicationId "com.project.activity"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.2.0'
+    compile project(':library')
+}
Index: library/project.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- library/project.properties	(revision )
+++ library/project.properties	(revision )
@@ -0,0 +1,15 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Project target.
+target=android-17
+android.library=true
Index: library/build/intermediates/res/merged/androidTest/debug/drawable/background_tab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/res/merged/androidTest/debug/drawable/background_tab.xml	(revision )
+++ library/build/intermediates/res/merged/androidTest/debug/drawable/background_tab.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" android:exitFadeDuration="@android:integer/config_shortAnimTime">
+
+    <item android:state_pressed="true" android:drawable="@color/background_tab_pressed" />
+    <item android:state_focused="true" android:drawable="@color/background_tab_pressed"/>
+    <item android:drawable="@android:color/transparent"/>
+
+</selector>
\ No newline at end of file
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+GooglePlay
\ No newline at end of file
Index: library/build/generated/source/r/androidTest/debug/com/astuetz/pagerslidingtabstrip/test/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/r/androidTest/debug/com/astuetz/pagerslidingtabstrip/test/R.java	(revision )
+++ library/build/generated/source/r/androidTest/debug/com/astuetz/pagerslidingtabstrip/test/R.java	(revision )
@@ -0,0 +1,425 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.astuetz.pagerslidingtabstrip.test;
+
+public final class R {
+    public static final class attr {
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsDividerColor=0x7f010002;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsDividerPadding=0x7f010005;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsIndicatorColor=0x7f010000;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsIndicatorHeight=0x7f010003;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsScrollOffset=0x7f010007;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsSelectedTabTextColor=0x7f01000e;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsSelectedTabTextSize=0x7f01000d;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsShouldExpand=0x7f010009;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static final int pstsTabBackground=0x7f010008;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsTabPaddingLeftRight=0x7f010006;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsTabTextColor=0x7f01000c;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsTabTextSize=0x7f01000b;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsTextAllCaps=0x7f01000a;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsUnderlineColor=0x7f010001;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static final int pstsUnderlineHeight=0x7f010004;
+    }
+    public static final class color {
+        public static final int background_tab_pressed=0x7f030000;
+    }
+    public static final class drawable {
+        public static final int background_tab=0x7f020000;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a PagerSlidingTabStrip.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsDividerColor com.astuetz.pagerslidingtabstrip.test:pstsDividerColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsDividerPadding com.astuetz.pagerslidingtabstrip.test:pstsDividerPadding}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsIndicatorColor com.astuetz.pagerslidingtabstrip.test:pstsIndicatorColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsIndicatorHeight com.astuetz.pagerslidingtabstrip.test:pstsIndicatorHeight}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsScrollOffset com.astuetz.pagerslidingtabstrip.test:pstsScrollOffset}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsSelectedTabTextColor com.astuetz.pagerslidingtabstrip.test:pstsSelectedTabTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsSelectedTabTextSize com.astuetz.pagerslidingtabstrip.test:pstsSelectedTabTextSize}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsShouldExpand com.astuetz.pagerslidingtabstrip.test:pstsShouldExpand}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabBackground com.astuetz.pagerslidingtabstrip.test:pstsTabBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabPaddingLeftRight com.astuetz.pagerslidingtabstrip.test:pstsTabPaddingLeftRight}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabTextColor com.astuetz.pagerslidingtabstrip.test:pstsTabTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabTextSize com.astuetz.pagerslidingtabstrip.test:pstsTabTextSize}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTextAllCaps com.astuetz.pagerslidingtabstrip.test:pstsTextAllCaps}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsUnderlineColor com.astuetz.pagerslidingtabstrip.test:pstsUnderlineColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsUnderlineHeight com.astuetz.pagerslidingtabstrip.test:pstsUnderlineHeight}</code></td><td></td></tr>
+           </table>
+           @see #PagerSlidingTabStrip_pstsDividerColor
+           @see #PagerSlidingTabStrip_pstsDividerPadding
+           @see #PagerSlidingTabStrip_pstsIndicatorColor
+           @see #PagerSlidingTabStrip_pstsIndicatorHeight
+           @see #PagerSlidingTabStrip_pstsScrollOffset
+           @see #PagerSlidingTabStrip_pstsSelectedTabTextColor
+           @see #PagerSlidingTabStrip_pstsSelectedTabTextSize
+           @see #PagerSlidingTabStrip_pstsShouldExpand
+           @see #PagerSlidingTabStrip_pstsTabBackground
+           @see #PagerSlidingTabStrip_pstsTabPaddingLeftRight
+           @see #PagerSlidingTabStrip_pstsTabTextColor
+           @see #PagerSlidingTabStrip_pstsTabTextSize
+           @see #PagerSlidingTabStrip_pstsTextAllCaps
+           @see #PagerSlidingTabStrip_pstsUnderlineColor
+           @see #PagerSlidingTabStrip_pstsUnderlineHeight
+         */
+        public static final int[] PagerSlidingTabStrip = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
+            0x7f01000c, 0x7f01000d, 0x7f01000e
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsDividerColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsDividerColor
+        */
+        public static final int PagerSlidingTabStrip_pstsDividerColor = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsDividerPadding}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsDividerPadding
+        */
+        public static final int PagerSlidingTabStrip_pstsDividerPadding = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsIndicatorColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsIndicatorColor
+        */
+        public static final int PagerSlidingTabStrip_pstsIndicatorColor = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsIndicatorHeight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsIndicatorHeight
+        */
+        public static final int PagerSlidingTabStrip_pstsIndicatorHeight = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsScrollOffset}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsScrollOffset
+        */
+        public static final int PagerSlidingTabStrip_pstsScrollOffset = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsSelectedTabTextColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsSelectedTabTextColor
+        */
+        public static final int PagerSlidingTabStrip_pstsSelectedTabTextColor = 14;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsSelectedTabTextSize}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsSelectedTabTextSize
+        */
+        public static final int PagerSlidingTabStrip_pstsSelectedTabTextSize = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsShouldExpand}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsShouldExpand
+        */
+        public static final int PagerSlidingTabStrip_pstsShouldExpand = 9;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsTabBackground}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsTabBackground
+        */
+        public static final int PagerSlidingTabStrip_pstsTabBackground = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsTabPaddingLeftRight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsTabPaddingLeftRight
+        */
+        public static final int PagerSlidingTabStrip_pstsTabPaddingLeftRight = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsTabTextColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsTabTextColor
+        */
+        public static final int PagerSlidingTabStrip_pstsTabTextColor = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsTabTextSize}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsTabTextSize
+        */
+        public static final int PagerSlidingTabStrip_pstsTabTextSize = 11;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsTextAllCaps}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsTextAllCaps
+        */
+        public static final int PagerSlidingTabStrip_pstsTextAllCaps = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsUnderlineColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsUnderlineColor
+        */
+        public static final int PagerSlidingTabStrip_pstsUnderlineColor = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.test.R.attr#pstsUnderlineHeight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip.test:pstsUnderlineHeight
+        */
+        public static final int PagerSlidingTabStrip_pstsUnderlineHeight = 4;
+    };
+}
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/profiles_settings.xml	(revision )
+++ .idea/inspectionProfiles/profiles_settings.xml	(revision )
@@ -0,0 +1,7 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="PROJECT_PROFILE" value="Project Default" />
+    <option name="USE_PROJECT_PROFILE" value="true" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision )
+++ .idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/project/fragment/AppFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/AppFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/AppFragment.java	(revision )
@@ -0,0 +1,41 @@
+package com.project.fragment;
+
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.support.annotation.Nullable;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class AppFragment extends BaseFragment {
+    @Override
+    public LoadingPager.LoadedResult initData() {// 真正加载数据
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+        // 返回成功的视图
+        TextView tv = new TextView(UIUtils.getContext());
+        tv.setText(this.getClass().getSimpleName());
+        return tv;
+    }
+}
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
Index: library/build/intermediates/blame/res/androidTest/debug/single/drawable.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/blame/res/androidTest/debug/single/drawable.json	(revision )
+++ library/build/intermediates/blame/res/androidTest/debug/single/drawable.json	(revision )
@@ -0,0 +1,6 @@
+[
+    {
+        "merged": "D:\\GooglePlay\\library\\build\\intermediates\\res\\merged\\androidTest\\debug\\drawable\\background_tab.xml",
+        "source": "D:\\GooglePlay\\library\\build\\intermediates\\bundles\\debug\\res\\drawable\\background_tab.xml"
+    }
+]
\ No newline at end of file
Index: library/build/intermediates/res/merged/androidTest/debug/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/res/merged/androidTest/debug/values/values.xml	(revision )
+++ library/build/intermediates/res/merged/androidTest/debug/values/values.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="background_tab_pressed">#6633B5E5</color>
+    <declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable>
+</resources>
\ No newline at end of file
Index: library/build/intermediates/incremental/mergeDebugAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/mergeDebugAssets/merger.xml	(revision )
+++ library/build/intermediates/incremental/mergeDebugAssets/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="D:\GooglePlay\library\src\main\assets"/></dataSet><dataSet config="debug"><source path="D:\GooglePlay\library\src\debug\assets"/></dataSet></merger>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="LOCAL" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="C:\Android\AndroidStudio\gradle\gradle-2.8" />
+        <option name="gradleJvm" value="1.8" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/library" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: library/build/intermediates/symbols/androidTest/debug/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/symbols/androidTest/debug/R.txt	(revision )
+++ library/build/intermediates/symbols/androidTest/debug/R.txt	(revision )
@@ -0,0 +1,33 @@
+int attr pstsDividerColor 0x7f010002
+int attr pstsDividerPadding 0x7f010005
+int attr pstsIndicatorColor 0x7f010000
+int attr pstsIndicatorHeight 0x7f010003
+int attr pstsScrollOffset 0x7f010007
+int attr pstsSelectedTabTextColor 0x7f01000e
+int attr pstsSelectedTabTextSize 0x7f01000d
+int attr pstsShouldExpand 0x7f010009
+int attr pstsTabBackground 0x7f010008
+int attr pstsTabPaddingLeftRight 0x7f010006
+int attr pstsTabTextColor 0x7f01000c
+int attr pstsTabTextSize 0x7f01000b
+int attr pstsTextAllCaps 0x7f01000a
+int attr pstsUnderlineColor 0x7f010001
+int attr pstsUnderlineHeight 0x7f010004
+int color background_tab_pressed 0x7f030000
+int drawable background_tab 0x7f020000
+int[] styleable PagerSlidingTabStrip { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e }
+int styleable PagerSlidingTabStrip_pstsDividerColor 2
+int styleable PagerSlidingTabStrip_pstsDividerPadding 5
+int styleable PagerSlidingTabStrip_pstsIndicatorColor 0
+int styleable PagerSlidingTabStrip_pstsIndicatorHeight 3
+int styleable PagerSlidingTabStrip_pstsScrollOffset 7
+int styleable PagerSlidingTabStrip_pstsSelectedTabTextColor 14
+int styleable PagerSlidingTabStrip_pstsSelectedTabTextSize 13
+int styleable PagerSlidingTabStrip_pstsShouldExpand 9
+int styleable PagerSlidingTabStrip_pstsTabBackground 8
+int styleable PagerSlidingTabStrip_pstsTabPaddingLeftRight 6
+int styleable PagerSlidingTabStrip_pstsTabTextColor 12
+int styleable PagerSlidingTabStrip_pstsTabTextSize 11
+int styleable PagerSlidingTabStrip_pstsTextAllCaps 10
+int styleable PagerSlidingTabStrip_pstsUnderlineColor 1
+int styleable PagerSlidingTabStrip_pstsUnderlineHeight 4
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+   <com.astuetz.PagerSlidingTabStripExtends
+       xmlns:itheima="http://schemas.android.com/apk/res-auto"
+       android:id="@+id/main_tabs"
+       android:layout_width="match_parent"
+       android:layout_height="48dp"
+       itheima:pstsIndicatorColor="@color/tab_indicator_selected"
+       itheima:pstsTabTextColor="@color/tab_text_normal"
+       itheima:pstsSelectedTabTextColor="@color/tab_text_selected"
+
+       itheima:pstsIndicatorHeight="8dp"
+
+       itheima:pstsSelectedTabTextSize="18sp"
+       itheima:pstsTabTextSize="16sp">
+
+   </com.astuetz.PagerSlidingTabStripExtends>
+   <android.support.v4.view.ViewPager
+       android:id="@+id/main_viewPager"
+       android:layout_width="match_parent"
+       android:layout_height="wrap_content">
+
+   </android.support.v4.view.ViewPager>
+
+
+
+</LinearLayout>
Index: app/src/main/java/com/project/util/LogUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/util/LogUtils.java	(revision )
+++ app/src/main/java/com/project/util/LogUtils.java	(revision )
@@ -0,0 +1,228 @@
+package com.project.util;
+
+import java.util.List;
+
+import com.project.conf.Constants;
+
+import android.text.TextUtils;
+import android.util.Log;
+
+/**
+ * @author itheima
+ * @time 	2015-6-23 上午11:33:49
+ * @des	   日志级别是LEVEL_ALL显示所有信息,包括System.out.println信息
+ * @des  日志级别是LEVEL_OFF关闭所有信息,包括System.out.println信息
+ * @updateAuthor TODO
+ * @updateTime TODO
+ * @updateDes TODO
+ */
+public class LogUtils {
+	/** 日志输出时的TAG */
+	private static String mTag = "GooglePlay";
+	/** 日志输出级别NONE */
+	public static final int LEVEL_OFF = 0;
+	/** 日志输出级别NONE */
+	public static final int LEVEL_ALL = 7;
+
+	/** 日志输出级别V */
+	public static final int LEVEL_VERBOSE = 1;
+	/** 日志输出级别D */
+	public static final int LEVEL_DEBUG = 2;
+	/** 日志输出级别I */
+	public static final int LEVEL_INFO = 3;
+	/** 日志输出级别W */
+	public static final int LEVEL_WARN = 4;
+	/** 日志输出级别E */
+	public static final int LEVEL_ERROR = 5;
+	/** 日志输出级别S,自定义定义的一个级别 */
+	public static final int LEVEL_SYSTEM = 6;
+
+	/** 是否允许输出log */
+	private static int mDebuggable = Constants.DEBUGLEVEL;
+
+	/** 用于记时的变量 */
+	private static long mTimestamp = 0;
+	/** 写文件的锁对象 */
+	private static final Object mLogLock = new Object();
+
+	/**---------------日志输出,已固定TAG  begin---------------**/
+	/** 以级别为 d 的形式输出LOG */
+	public static void v(String msg) {
+		if (mDebuggable >= LEVEL_VERBOSE) {
+			Log.v(mTag, msg);
+		}
+	}
+
+	/** 以级别为 d 的形式输出LOG */
+	public static void d(String msg) {
+		if (mDebuggable >= LEVEL_DEBUG) {
+			Log.d(mTag, msg);
+		}
+	}
+
+	/** 以级别为 i 的形式输出LOG */
+	public static void i(String msg) {
+		if (mDebuggable >= LEVEL_INFO) {
+			Log.i(mTag, msg);
+		}
+	}
+
+	/** 以级别为 w 的形式输出LOG */
+	public static void w(String msg) {
+		if (mDebuggable >= LEVEL_WARN) {
+			Log.w(mTag, msg);
+		}
+	}
+
+	/** 以级别为 w 的形式输出Throwable */
+	public static void w(Throwable tr) {
+		if (mDebuggable >= LEVEL_WARN) {
+			Log.w(mTag, "", tr);
+		}
+	}
+
+	/** 以级别为 w 的形式输出LOG信息和Throwable */
+	public static void w(String msg, Throwable tr) {
+		if (mDebuggable >= LEVEL_WARN && null != msg) {
+			Log.w(mTag, msg, tr);
+		}
+	}
+
+	/** 以级别为 e 的形式输出LOG */
+	public static void e(String msg) {
+		if (mDebuggable >= LEVEL_ERROR) {
+			Log.e(mTag, msg);
+		}
+	}
+
+	/** 以级别为 s 的形式输出LOG,主要是为了System.out.println,稍微格式化了一下 */
+	public static void sf(String msg) {
+		if (mDebuggable >= LEVEL_ERROR) {
+			System.out.println("----------" + msg + "----------");
+		}
+	}
+
+	/** 以级别为 s 的形式输出LOG,主要是为了System.out.println */
+	public static void s(String msg) {
+		if (mDebuggable >= LEVEL_ERROR) {
+			System.out.println(msg);
+		}
+	}
+
+	/** 以级别为 e 的形式输出Throwable */
+	public static void e(Throwable tr) {
+		if (mDebuggable >= LEVEL_ERROR) {
+			Log.e(mTag, "", tr);
+		}
+	}
+
+	/** 以级别为 e 的形式输出LOG信息和Throwable */
+	public static void e(String msg, Throwable tr) {
+		if (mDebuggable >= LEVEL_ERROR && null != msg) {
+			Log.e(mTag, msg, tr);
+		}
+	}
+
+	/**---------------日志输出,已固定TAG  end---------------**/
+
+	/**---------------日志输出,未固定TAG  begin---------------**/
+	/** 以级别为 d 的形式输出LOG */
+	public static void v(String tag, String msg) {
+		if (mDebuggable >= LEVEL_VERBOSE) {
+			Log.v(tag, msg);
+		}
+	}
+
+	/** 以级别为 d 的形式输出LOG */
+	public static void d(String tag, String msg) {
+		if (mDebuggable >= LEVEL_DEBUG) {
+			Log.d(tag, msg);
+		}
+	}
+
+	/** 以级别为 i 的形式输出LOG */
+	public static void i(String tag, String msg) {
+		if (mDebuggable >= LEVEL_INFO) {
+			Log.i(tag, msg);
+		}
+	}
+
+	/** 以级别为 w 的形式输出LOG */
+	public static void w(String tag, String msg) {
+		if (mDebuggable >= LEVEL_WARN) {
+			Log.w(tag, msg);
+		}
+	}
+
+	/** 以级别为 e 的形式输出LOG */
+	public static void e(String tag, String msg) {
+		if (mDebuggable >= LEVEL_ERROR) {
+			Log.e(tag, msg);
+		}
+	}
+
+	/**---------------日志输出,未固定TAG  end---------------**/
+
+	/**
+	 * 把Log存储到文件中
+	 * 
+	 * @param log
+	 *            需要存储的日志
+	 * @param path
+	 *            存储路径
+	 */
+	public static void log2File(String log, String path) {
+		log2File(log, path, true);
+	}
+
+	public static void log2File(String log, String path, boolean append) {
+		synchronized (mLogLock) {
+			FileUtils.writeFile(log + "\r\n", path, append);
+		}
+	}
+
+	/**
+	 * 以级别为 e 的形式输出msg信息,附带时间戳，用于输出一个时间段起始点
+	 * 
+	 * @param msg
+	 *            需要输出的msg
+	 */
+	public static void msgStartTime(String msg) {
+		mTimestamp = System.currentTimeMillis();
+		if (!TextUtils.isEmpty(msg)) {
+			e("[Started：" + mTimestamp + "]" + msg);
+		}
+	}
+
+	/** 以级别为 e 的形式输出msg信息,附带时间戳，用于输出一个时间段结束点* @param msg 需要输出的msg */
+	public static void elapsed(String msg) {
+		long currentTime = System.currentTimeMillis();
+		long elapsedTime = currentTime - mTimestamp;
+		mTimestamp = currentTime;
+		e("[Elapsed：" + elapsedTime + "]" + msg);
+	}
+
+	public static <T> void printList(List<T> list) {
+		if (list == null || list.size() < 1) {
+			return;
+		}
+		int size = list.size();
+		i("---begin---");
+		for (int i = 0; i < size; i++) {
+			i(i + ":" + list.get(i).toString());
+		}
+		i("---end---");
+	}
+
+	public static <T> void printArray(T[] array) {
+		if (array == null || array.length < 1) {
+			return;
+		}
+		int length = array.length;
+		i("---begin---");
+		for (int i = 0; i < length; i++) {
+			i(i + ":" + array[i].toString());
+		}
+		i("---end---");
+	}
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.project.activity">
+
+    <application
+        android:name="com.project.base.BaseApplication"
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/Theme.AppCompat.Light">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
Index: library/src/com/astuetz/PagerSlidingTabStripExtends.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/src/com/astuetz/PagerSlidingTabStripExtends.java	(revision )
+++ library/src/com/astuetz/PagerSlidingTabStripExtends.java	(revision )
@@ -0,0 +1,632 @@
+/*
+ * Copyright (C) 2013 Andreas Stuetz <andreas.stuetz@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.astuetz;
+
+import java.util.Locale;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.Paint.Style;
+import android.graphics.Typeface;
+import android.os.Build;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.support.v4.view.ViewPager;
+import android.support.v4.view.ViewPager.OnPageChangeListener;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.View;
+import android.view.ViewTreeObserver.OnGlobalLayoutListener;
+import android.widget.HorizontalScrollView;
+import android.widget.ImageButton;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.astuetz.pagerslidingtabstrip.R;
+
+public class PagerSlidingTabStripExtends extends HorizontalScrollView {
+
+	public interface IconTabProvider {
+		public int getPageIconResId(int position);
+	}
+
+	// @formatter:off
+	private static final int[]			ATTRS					= new int[] { android.R.attr.textSize,
+			android.R.attr.textColor							};
+	// @formatter:on
+
+	private LinearLayout.LayoutParams	defaultTabLayoutParams;
+	private LinearLayout.LayoutParams	expandedTabLayoutParams;
+
+	private final PageListener			pageListener			= new PageListener();
+	public OnPageChangeListener			delegatePageListener;
+
+	private LinearLayout				tabsContainer;
+	private ViewPager					pager;
+
+	private int							tabCount;
+
+	private int							currentPosition			= 0;
+	private float						currentPositionOffset	= 0f;
+
+	private Paint						rectPaint;
+	private Paint						dividerPaint;
+
+	private int							indicatorColor			= 0xFF666666;
+	private int							underlineColor			= 0x1A000000;
+	private int							dividerColor			= 0x1A000000;
+
+	private boolean						shouldExpand			= false;
+	private boolean						textAllCaps				= true;
+
+	private int							scrollOffset			= 52;
+	private int							indicatorHeight			= 8;
+	private int							underlineHeight			= 2;
+	private int							dividerPadding			= 12;
+	private int							tabPadding				= 24;
+	private int							dividerWidth			= 1;
+	/*--------------- add begin  ---------------*/
+	private int							tabTextSize				= 12;
+	private int							tabTextColor			= 0xFF666666;
+
+	private int							selectedTabTextSize		= 12;
+	private int							selectedTabTextColor	= 0xFF666666;
+
+	private int							mSelectedPostion;										// 记录当前viewpager选中的postion
+	/*--------------- add end  ---------------*/
+
+	private Typeface					tabTypeface				= null;
+	private int							tabTypefaceStyle		= Typeface.BOLD;
+
+	private int							lastScrollX				= 0;
+
+	private int							tabBackgroundResId		= R.drawable.background_tab;
+
+	private Locale						locale;
+
+	public PagerSlidingTabStripExtends(Context context) {
+		this(context, null);
+	}
+
+	public PagerSlidingTabStripExtends(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public PagerSlidingTabStripExtends(Context context, AttributeSet attrs, int defStyle) {
+		super(context, attrs, defStyle);
+
+		setFillViewport(true);
+		setWillNotDraw(false);
+
+		tabsContainer = new LinearLayout(context);
+		tabsContainer.setOrientation(LinearLayout.HORIZONTAL);
+		tabsContainer.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+		addView(tabsContainer);
+
+		DisplayMetrics dm = getResources().getDisplayMetrics();
+
+		scrollOffset = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, scrollOffset, dm);
+		indicatorHeight = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, indicatorHeight, dm);
+		underlineHeight = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, underlineHeight, dm);
+		dividerPadding = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dividerPadding, dm);
+		tabPadding = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, tabPadding, dm);
+		dividerWidth = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dividerWidth, dm);
+		tabTextSize = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, tabTextSize, dm);
+
+		// get system attrs (android:textSize and android:textColor)
+
+		TypedArray a = context.obtainStyledAttributes(attrs, ATTRS);
+
+		tabTextSize = a.getDimensionPixelSize(0, tabTextSize);
+		tabTextColor = a.getColor(1, tabTextColor);
+
+		a.recycle();
+
+		// get custom attrs
+
+		a = context.obtainStyledAttributes(attrs, R.styleable.PagerSlidingTabStrip);
+
+		indicatorColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsIndicatorColor, indicatorColor);
+		underlineColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsUnderlineColor, underlineColor);
+		dividerColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsDividerColor, dividerColor);
+		indicatorHeight = a
+				.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsIndicatorHeight, indicatorHeight);
+		underlineHeight = a
+				.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsUnderlineHeight, underlineHeight);
+		dividerPadding = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsDividerPadding, dividerPadding);
+		tabPadding = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsTabPaddingLeftRight, tabPadding);
+		tabBackgroundResId = a.getResourceId(R.styleable.PagerSlidingTabStrip_pstsTabBackground, tabBackgroundResId);
+		shouldExpand = a.getBoolean(R.styleable.PagerSlidingTabStrip_pstsShouldExpand, shouldExpand);
+		scrollOffset = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsScrollOffset, scrollOffset);
+		textAllCaps = a.getBoolean(R.styleable.PagerSlidingTabStrip_pstsTextAllCaps, textAllCaps);
+
+		/*--------------- add begin ---------------*/
+		tabTextSize = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsTabTextSize, tabTextSize);
+		tabTextColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsTabTextColor, tabTextColor);
+
+		selectedTabTextSize = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsSelectedTabTextSize,
+				selectedTabTextSize);
+		selectedTabTextColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsSelectedTabTextColor,
+				selectedTabTextColor);
+
+		/*--------------- add end ---------------*/
+
+		a.recycle();
+
+		rectPaint = new Paint();
+		rectPaint.setAntiAlias(true);
+		rectPaint.setStyle(Style.FILL);
+
+		dividerPaint = new Paint();
+		dividerPaint.setAntiAlias(true);
+		dividerPaint.setStrokeWidth(dividerWidth);
+
+		defaultTabLayoutParams = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
+		expandedTabLayoutParams = new LinearLayout.LayoutParams(0, LayoutParams.MATCH_PARENT, 1.0f);
+
+		if (locale == null) {
+			locale = getResources().getConfiguration().locale;
+		}
+	}
+
+	public void setViewPager(ViewPager pager) {
+		this.pager = pager;
+
+		if (pager.getAdapter() == null) {
+			throw new IllegalStateException("ViewPager does not have adapter instance.");
+		}
+
+		pager.setOnPageChangeListener(pageListener);
+
+		notifyDataSetChanged();
+	}
+
+	public void setOnPageChangeListener(OnPageChangeListener listener) {
+		this.delegatePageListener = listener;
+	}
+
+	public void notifyDataSetChanged() {
+
+		tabsContainer.removeAllViews();
+
+		tabCount = pager.getAdapter().getCount();
+
+		for (int i = 0; i < tabCount; i++) {
+
+			if (pager.getAdapter() instanceof IconTabProvider) {
+				addIconTab(i, ((IconTabProvider) pager.getAdapter()).getPageIconResId(i));
+			} else {
+				addTextTab(i, pager.getAdapter().getPageTitle(i).toString());
+			}
+
+		}
+
+		updateTabStyles();
+
+		getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
+
+			@SuppressWarnings("deprecation")
+			@SuppressLint("NewApi")
+			@Override
+			public void onGlobalLayout() {
+
+				if (Build.VERSION.SDK_INT < 16) {
+					getViewTreeObserver().removeGlobalOnLayoutListener(this);
+				} else {
+					//SgetViewTreeObserver().removeOnGlobalLayoutListener(this);
+				}
+
+				currentPosition = pager.getCurrentItem();
+				scrollToChild(currentPosition, 0);
+				if (delegatePageListener != null) {
+					delegatePageListener.onPageSelected(0);
+				}
+			}
+		});
+
+	}
+
+	private void addTextTab(final int position, String title) {
+
+		TextView tab = new TextView(getContext());
+		tab.setText(title);
+		tab.setGravity(Gravity.CENTER);
+		tab.setSingleLine();
+
+		addTab(position, tab);
+	}
+
+	private void addIconTab(final int position, int resId) {
+
+		ImageButton tab = new ImageButton(getContext());
+		tab.setImageResource(resId);
+
+		addTab(position, tab);
+
+	}
+
+	private void addTab(final int position, View tab) {
+		tab.setFocusable(true);
+		tab.setOnClickListener(new OnClickListener() {
+			@Override
+			public void onClick(View v) {
+				pager.setCurrentItem(position);
+			}
+		});
+
+		tab.setPadding(tabPadding, 0, tabPadding, 0);
+		tabsContainer.addView(tab, position, shouldExpand ? expandedTabLayoutParams : defaultTabLayoutParams);
+	}
+
+	/**
+	 * 修改样式
+	 */
+	private void updateTabStyles() {
+
+		for (int i = 0; i < tabCount; i++) {
+
+			View v = tabsContainer.getChildAt(i);
+
+			v.setBackgroundResource(tabBackgroundResId);
+
+			if (v instanceof TextView) {
+
+				TextView tab = (TextView) v;
+				tab.setTextSize(TypedValue.COMPLEX_UNIT_PX, tabTextSize);
+				tab.setTypeface(tabTypeface, tabTypefaceStyle);
+				tab.setTextColor(tabTextColor);
+
+				// setAllCaps() is only available from API 14, so the upper case is made manually if we are on a
+				// pre-ICS-build
+				if (textAllCaps) {
+					if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
+						tab.setAllCaps(true);
+					} else {
+						tab.setText(tab.getText().toString().toUpperCase(locale));
+					}
+				}
+				// 如果选中
+				if (mSelectedPostion == i) {
+					tab.setTextSize(TypedValue.COMPLEX_UNIT_PX, selectedTabTextSize);
+					tab.setTextColor(selectedTabTextColor);
+				}
+			}
+		}
+
+	}
+
+	private void scrollToChild(int position, int offset) {
+
+		if (tabCount == 0) {
+			return;
+		}
+
+		int newScrollX = tabsContainer.getChildAt(position).getLeft() + offset;
+
+		if (position > 0 || offset > 0) {
+			newScrollX -= scrollOffset;
+		}
+
+		if (newScrollX != lastScrollX) {
+			lastScrollX = newScrollX;
+			scrollTo(newScrollX, 0);
+		}
+
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		super.onDraw(canvas);
+
+		if (isInEditMode() || tabCount == 0) {
+			return;
+		}
+
+		final int height = getHeight();
+
+		// draw indicator line
+
+		rectPaint.setColor(indicatorColor);
+
+		// default: line below current tab
+		View currentTab = tabsContainer.getChildAt(currentPosition);
+		float lineLeft = currentTab.getLeft();
+		float lineRight = currentTab.getRight();
+
+		// if there is an offset, start interpolating left and right coordinates between current and next tab
+		if (currentPositionOffset > 0f && currentPosition < tabCount - 1) {
+
+			View nextTab = tabsContainer.getChildAt(currentPosition + 1);
+			final float nextTabLeft = nextTab.getLeft();
+			final float nextTabRight = nextTab.getRight();
+
+			lineLeft = (currentPositionOffset * nextTabLeft + (1f - currentPositionOffset) * lineLeft);
+			lineRight = (currentPositionOffset * nextTabRight + (1f - currentPositionOffset) * lineRight);
+		}
+		// 绘制indicator
+
+		canvas.drawRect(lineLeft, height - indicatorHeight, lineRight, height, rectPaint);
+
+		/*
+		x = (lineRight-lineLeft)/2+lineLeft
+		y = height - indicatorHeight
+		 */
+		/*
+		int triangleWidth = 18;
+		float x1 = (lineRight - lineLeft) / 2 + lineLeft;
+		float y1 = height - indicatorHeight;
+		float x2 = x1 - triangleWidth / 2;
+		float y2 = height;
+		float x3 = x1 + triangleWidth / 2;
+		float y3 = height;
+
+		Path path = new Path();
+		path.moveTo(x1, y1);
+		path.lineTo(x2, y2);
+		path.lineTo(x3, y3);
+		path.lineTo(x1, y1);
+
+		canvas.drawPath(path, rectPaint);*/
+
+		// draw underline
+
+		rectPaint.setColor(underlineColor);
+		canvas.drawRect(0, height - underlineHeight, tabsContainer.getWidth(), height, rectPaint);
+
+		// draw divider
+
+		dividerPaint.setColor(dividerColor);
+		for (int i = 0; i < tabCount - 1; i++) {
+			View tab = tabsContainer.getChildAt(i);
+			canvas.drawLine(tab.getRight(), dividerPadding, tab.getRight(), height - dividerPadding, dividerPaint);
+		}
+	}
+
+	private class PageListener implements OnPageChangeListener {
+
+		@Override
+		public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+
+			currentPosition = position;
+			currentPositionOffset = positionOffset;
+
+			scrollToChild(position, (int) (positionOffset * tabsContainer.getChildAt(position).getWidth()));
+
+			invalidate();
+
+			if (delegatePageListener != null) {
+				delegatePageListener.onPageScrolled(position, positionOffset, positionOffsetPixels);
+			}
+		}
+
+		@Override
+		public void onPageScrollStateChanged(int state) {
+			if (state == ViewPager.SCROLL_STATE_IDLE) {
+				scrollToChild(pager.getCurrentItem(), 0);
+			}
+
+			if (delegatePageListener != null) {
+				delegatePageListener.onPageScrollStateChanged(state);
+			}
+		}
+
+		@Override
+		public void onPageSelected(int position) {
+			if (delegatePageListener != null) {
+				delegatePageListener.onPageSelected(position);
+			}
+			mSelectedPostion = position;
+			updateTabStyles();
+		}
+
+	}
+
+	public void setIndicatorColor(int indicatorColor) {
+		this.indicatorColor = indicatorColor;
+		invalidate();
+	}
+
+	public void setIndicatorColorResource(int resId) {
+		this.indicatorColor = getResources().getColor(resId);
+		invalidate();
+	}
+
+	public int getIndicatorColor() {
+		return this.indicatorColor;
+	}
+
+	public void setIndicatorHeight(int indicatorLineHeightPx) {
+		this.indicatorHeight = indicatorLineHeightPx;
+		invalidate();
+	}
+
+	public int getIndicatorHeight() {
+		return indicatorHeight;
+	}
+
+	public void setUnderlineColor(int underlineColor) {
+		this.underlineColor = underlineColor;
+		invalidate();
+	}
+
+	public void setUnderlineColorResource(int resId) {
+		this.underlineColor = getResources().getColor(resId);
+		invalidate();
+	}
+
+	public int getUnderlineColor() {
+		return underlineColor;
+	}
+
+	public void setDividerColor(int dividerColor) {
+		this.dividerColor = dividerColor;
+		invalidate();
+	}
+
+	public void setDividerColorResource(int resId) {
+		this.dividerColor = getResources().getColor(resId);
+		invalidate();
+	}
+
+	public int getDividerColor() {
+		return dividerColor;
+	}
+
+	public void setUnderlineHeight(int underlineHeightPx) {
+		this.underlineHeight = underlineHeightPx;
+		invalidate();
+	}
+
+	public int getUnderlineHeight() {
+		return underlineHeight;
+	}
+
+	public void setDividerPadding(int dividerPaddingPx) {
+		this.dividerPadding = dividerPaddingPx;
+		invalidate();
+	}
+
+	public int getDividerPadding() {
+		return dividerPadding;
+	}
+
+	public void setScrollOffset(int scrollOffsetPx) {
+		this.scrollOffset = scrollOffsetPx;
+		invalidate();
+	}
+
+	public int getScrollOffset() {
+		return scrollOffset;
+	}
+
+	public void setShouldExpand(boolean shouldExpand) {
+		this.shouldExpand = shouldExpand;
+		requestLayout();
+	}
+
+	public boolean getShouldExpand() {
+		return shouldExpand;
+	}
+
+	public boolean isTextAllCaps() {
+		return textAllCaps;
+	}
+
+	public void setAllCaps(boolean textAllCaps) {
+		this.textAllCaps = textAllCaps;
+	}
+
+	public void setTextSize(int textSizePx) {
+		this.tabTextSize = textSizePx;
+		updateTabStyles();
+	}
+
+	public int getTextSize() {
+		return tabTextSize;
+	}
+
+	public void setTextColor(int textColor) {
+		this.tabTextColor = textColor;
+		updateTabStyles();
+	}
+
+	public void setTextColorResource(int resId) {
+		this.tabTextColor = getResources().getColor(resId);
+		updateTabStyles();
+	}
+
+	public int getTextColor() {
+		return tabTextColor;
+	}
+
+	public void setTypeface(Typeface typeface, int style) {
+		this.tabTypeface = typeface;
+		this.tabTypefaceStyle = style;
+		updateTabStyles();
+	}
+
+	public void setTabBackground(int resId) {
+		this.tabBackgroundResId = resId;
+	}
+
+	public int getTabBackground() {
+		return tabBackgroundResId;
+	}
+
+	public void setTabPaddingLeftRight(int paddingPx) {
+		this.tabPadding = paddingPx;
+		updateTabStyles();
+	}
+
+	public int getTabPaddingLeftRight() {
+		return tabPadding;
+	}
+
+	@Override
+	public void onRestoreInstanceState(Parcelable state) {
+		SavedState savedState = (SavedState) state;
+		super.onRestoreInstanceState(savedState.getSuperState());
+		currentPosition = savedState.currentPosition;
+		requestLayout();
+	}
+
+	@Override
+	public Parcelable onSaveInstanceState() {
+		Parcelable superState = super.onSaveInstanceState();
+		SavedState savedState = new SavedState(superState);
+		savedState.currentPosition = currentPosition;
+		return savedState;
+	}
+
+	static class SavedState extends BaseSavedState {
+		int	currentPosition;
+
+		public SavedState(Parcelable superState) {
+			super(superState);
+		}
+
+		private SavedState(Parcel in) {
+			super(in);
+			currentPosition = in.readInt();
+		}
+
+		@Override
+		public void writeToParcel(Parcel dest, int flags) {
+			super.writeToParcel(dest, flags);
+			dest.writeInt(currentPosition);
+		}
+
+		public static final Creator<SavedState>	CREATOR	= new Creator<SavedState>() {
+																		@Override
+																		public SavedState createFromParcel(Parcel in) {
+																			return new SavedState(in);
+																		}
+
+																		@Override
+																		public SavedState[] newArray(int size) {
+																			return new SavedState[size];
+																		}
+																	};
+	}
+
+}
Index: library/build/intermediates/incremental/mergeDebugAndroidTestAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/mergeDebugAndroidTestAssets/merger.xml	(revision )
+++ library/build/intermediates/incremental/mergeDebugAndroidTestAssets/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="debug"><source path="D:\GooglePlay\library\build\intermediates\bundles\debug\assets"/></dataSet><dataSet config="main"><source path="D:\GooglePlay\library\src\androidTest\assets"/></dataSet></merger>
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/GooglePlay.iml" filepath="$PROJECT_DIR$/GooglePlay.iml" />
+      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+      <module fileurl="file://$PROJECT_DIR$/library/library.iml" filepath="$PROJECT_DIR$/library/library.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: library/build/generated/source/buildConfig/release/com/astuetz/pagerslidingtabstrip/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/buildConfig/release/com/astuetz/pagerslidingtabstrip/BuildConfig.java	(revision )
+++ library/build/generated/source/buildConfig/release/com/astuetz/pagerslidingtabstrip/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.astuetz.pagerslidingtabstrip;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = false;
+  public static final String APPLICATION_ID = "com.astuetz.pagerslidingtabstrip";
+  public static final String BUILD_TYPE = "release";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = -1;
+  public static final String VERSION_NAME = "";
+}
Index: app/src/main/java/com/project/fragment/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/HomeFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/HomeFragment.java	(revision )
@@ -0,0 +1,42 @@
+package com.project.fragment;
+
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.support.annotation.Nullable;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class HomeFragment extends BaseFragment {
+
+
+    @Override
+    public LoadingPager.LoadedResult initData() {// 真正加载数据
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+        // 返回成功的视图
+        TextView tv = new TextView(UIUtils.getContext());
+        tv.setText(this.getClass().getSimpleName());
+        return tv;
+    }
+}
Index: library/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml	(revision )
+++ library/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="D:\GooglePlay\library\src\main\jniLibs"/></dataSet><dataSet config="release"><source path="D:\GooglePlay\library\src\release\jniLibs"/></dataSet></merger>
\ No newline at end of file
Index: library/build/intermediates/bundles/release/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/release/res/values/values.xml	(revision )
+++ library/build/intermediates/bundles/release/res/values/values.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="background_tab_pressed">#6633B5E5</color>
+    <declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable>
+</resources>
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app','library'
Index: library/build/generated/source/r/androidTest/debug/com/astuetz/pagerslidingtabstrip/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/r/androidTest/debug/com/astuetz/pagerslidingtabstrip/R.java	(revision )
+++ library/build/generated/source/r/androidTest/debug/com/astuetz/pagerslidingtabstrip/R.java	(revision )
@@ -0,0 +1,51 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+package com.astuetz.pagerslidingtabstrip;
+
+public final class R {
+	public static final class attr {
+		public static final int pstsDividerColor = 0x7f010002;
+		public static final int pstsDividerPadding = 0x7f010005;
+		public static final int pstsIndicatorColor = 0x7f010000;
+		public static final int pstsIndicatorHeight = 0x7f010003;
+		public static final int pstsScrollOffset = 0x7f010007;
+		public static final int pstsSelectedTabTextColor = 0x7f01000e;
+		public static final int pstsSelectedTabTextSize = 0x7f01000d;
+		public static final int pstsShouldExpand = 0x7f010009;
+		public static final int pstsTabBackground = 0x7f010008;
+		public static final int pstsTabPaddingLeftRight = 0x7f010006;
+		public static final int pstsTabTextColor = 0x7f01000c;
+		public static final int pstsTabTextSize = 0x7f01000b;
+		public static final int pstsTextAllCaps = 0x7f01000a;
+		public static final int pstsUnderlineColor = 0x7f010001;
+		public static final int pstsUnderlineHeight = 0x7f010004;
+	}
+	public static final class color {
+		public static final int background_tab_pressed = 0x7f030000;
+	}
+	public static final class drawable {
+		public static final int background_tab = 0x7f020000;
+	}
+	public static final class styleable {
+		public static final int[] PagerSlidingTabStrip = { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e };
+		public static final int PagerSlidingTabStrip_pstsDividerColor = 2;
+		public static final int PagerSlidingTabStrip_pstsDividerPadding = 5;
+		public static final int PagerSlidingTabStrip_pstsIndicatorColor = 0;
+		public static final int PagerSlidingTabStrip_pstsIndicatorHeight = 3;
+		public static final int PagerSlidingTabStrip_pstsScrollOffset = 7;
+		public static final int PagerSlidingTabStrip_pstsSelectedTabTextColor = 14;
+		public static final int PagerSlidingTabStrip_pstsSelectedTabTextSize = 13;
+		public static final int PagerSlidingTabStrip_pstsShouldExpand = 9;
+		public static final int PagerSlidingTabStrip_pstsTabBackground = 8;
+		public static final int PagerSlidingTabStrip_pstsTabPaddingLeftRight = 6;
+		public static final int PagerSlidingTabStrip_pstsTabTextColor = 12;
+		public static final int PagerSlidingTabStrip_pstsTabTextSize = 11;
+		public static final int PagerSlidingTabStrip_pstsTextAllCaps = 10;
+		public static final int PagerSlidingTabStrip_pstsUnderlineColor = 1;
+		public static final int PagerSlidingTabStrip_pstsUnderlineHeight = 4;
+	}
+}
Index: app/src/main/java/com/project/fragment/CategoryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/CategoryFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/CategoryFragment.java	(revision )
@@ -0,0 +1,41 @@
+package com.project.fragment;
+
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.support.annotation.Nullable;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class CategoryFragment extends BaseFragment {
+    @Override
+    public LoadingPager.LoadedResult initData() {// 真正加载数据
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+        // 返回成功的视图
+        TextView tv = new TextView(UIUtils.getContext());
+        tv.setText(this.getClass().getSimpleName());
+        return tv;
+    }
+}
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in D:\Android1\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/java/com/project/conf/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/conf/Constants.java	(revision )
+++ app/src/main/java/com/project/conf/Constants.java	(revision )
@@ -0,0 +1,19 @@
+package com.project.conf;
+
+import com.project.util.LogUtils;
+
+/**
+ * @author  Administrator
+ * @time 	2015-7-15 上午11:05:12
+ * @des	TODO
+ *
+ * @version $Rev: 4 $
+ * @updateAuthor $Author: admin $
+ * @updateDate $Date: 2015-07-15 11:12:48 +0800 (星期三, 15 七月 2015) $
+ * @updateDes TODO
+ */
+public class Constants {
+
+	public static final int	DEBUGLEVEL	= LogUtils.LEVEL_ALL;//LEVEL_ALL,显示所有的日子,OFF:关闭日志的显示
+
+}
Index: library/build/generated/source/r/release/com/astuetz/pagerslidingtabstrip/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/r/release/com/astuetz/pagerslidingtabstrip/R.java	(revision )
+++ library/build/generated/source/r/release/com/astuetz/pagerslidingtabstrip/R.java	(revision )
@@ -0,0 +1,425 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.astuetz.pagerslidingtabstrip;
+
+public final class R {
+    public static final class attr {
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsDividerColor=0x7f010002;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsDividerPadding=0x7f010005;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsIndicatorColor=0x7f010000;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsIndicatorHeight=0x7f010003;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsScrollOffset=0x7f010007;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsSelectedTabTextColor=0x7f01000e;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsSelectedTabTextSize=0x7f01000d;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsShouldExpand=0x7f010009;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int pstsTabBackground=0x7f010008;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTabPaddingLeftRight=0x7f010006;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTabTextColor=0x7f01000c;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTabTextSize=0x7f01000b;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTextAllCaps=0x7f01000a;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsUnderlineColor=0x7f010001;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsUnderlineHeight=0x7f010004;
+    }
+    public static final class color {
+        public static int background_tab_pressed=0x7f030000;
+    }
+    public static final class drawable {
+        public static int background_tab=0x7f020000;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a PagerSlidingTabStrip.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsDividerColor com.astuetz.pagerslidingtabstrip:pstsDividerColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsDividerPadding com.astuetz.pagerslidingtabstrip:pstsDividerPadding}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsIndicatorColor com.astuetz.pagerslidingtabstrip:pstsIndicatorColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsIndicatorHeight com.astuetz.pagerslidingtabstrip:pstsIndicatorHeight}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsScrollOffset com.astuetz.pagerslidingtabstrip:pstsScrollOffset}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsSelectedTabTextColor com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsSelectedTabTextSize com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextSize}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsShouldExpand com.astuetz.pagerslidingtabstrip:pstsShouldExpand}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabBackground com.astuetz.pagerslidingtabstrip:pstsTabBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabPaddingLeftRight com.astuetz.pagerslidingtabstrip:pstsTabPaddingLeftRight}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabTextColor com.astuetz.pagerslidingtabstrip:pstsTabTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabTextSize com.astuetz.pagerslidingtabstrip:pstsTabTextSize}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTextAllCaps com.astuetz.pagerslidingtabstrip:pstsTextAllCaps}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsUnderlineColor com.astuetz.pagerslidingtabstrip:pstsUnderlineColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsUnderlineHeight com.astuetz.pagerslidingtabstrip:pstsUnderlineHeight}</code></td><td></td></tr>
+           </table>
+           @see #PagerSlidingTabStrip_pstsDividerColor
+           @see #PagerSlidingTabStrip_pstsDividerPadding
+           @see #PagerSlidingTabStrip_pstsIndicatorColor
+           @see #PagerSlidingTabStrip_pstsIndicatorHeight
+           @see #PagerSlidingTabStrip_pstsScrollOffset
+           @see #PagerSlidingTabStrip_pstsSelectedTabTextColor
+           @see #PagerSlidingTabStrip_pstsSelectedTabTextSize
+           @see #PagerSlidingTabStrip_pstsShouldExpand
+           @see #PagerSlidingTabStrip_pstsTabBackground
+           @see #PagerSlidingTabStrip_pstsTabPaddingLeftRight
+           @see #PagerSlidingTabStrip_pstsTabTextColor
+           @see #PagerSlidingTabStrip_pstsTabTextSize
+           @see #PagerSlidingTabStrip_pstsTextAllCaps
+           @see #PagerSlidingTabStrip_pstsUnderlineColor
+           @see #PagerSlidingTabStrip_pstsUnderlineHeight
+         */
+        public static final int[] PagerSlidingTabStrip = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
+            0x7f01000c, 0x7f01000d, 0x7f01000e
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsDividerColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsDividerColor
+        */
+        public static int PagerSlidingTabStrip_pstsDividerColor = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsDividerPadding}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsDividerPadding
+        */
+        public static int PagerSlidingTabStrip_pstsDividerPadding = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsIndicatorColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsIndicatorColor
+        */
+        public static int PagerSlidingTabStrip_pstsIndicatorColor = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsIndicatorHeight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsIndicatorHeight
+        */
+        public static int PagerSlidingTabStrip_pstsIndicatorHeight = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsScrollOffset}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsScrollOffset
+        */
+        public static int PagerSlidingTabStrip_pstsScrollOffset = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsSelectedTabTextColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextColor
+        */
+        public static int PagerSlidingTabStrip_pstsSelectedTabTextColor = 14;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsSelectedTabTextSize}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextSize
+        */
+        public static int PagerSlidingTabStrip_pstsSelectedTabTextSize = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsShouldExpand}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsShouldExpand
+        */
+        public static int PagerSlidingTabStrip_pstsShouldExpand = 9;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabBackground}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabBackground
+        */
+        public static int PagerSlidingTabStrip_pstsTabBackground = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabPaddingLeftRight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabPaddingLeftRight
+        */
+        public static int PagerSlidingTabStrip_pstsTabPaddingLeftRight = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabTextColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabTextColor
+        */
+        public static int PagerSlidingTabStrip_pstsTabTextColor = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabTextSize}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabTextSize
+        */
+        public static int PagerSlidingTabStrip_pstsTabTextSize = 11;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTextAllCaps}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTextAllCaps
+        */
+        public static int PagerSlidingTabStrip_pstsTextAllCaps = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsUnderlineColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsUnderlineColor
+        */
+        public static int PagerSlidingTabStrip_pstsUnderlineColor = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsUnderlineHeight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsUnderlineHeight
+        */
+        public static int PagerSlidingTabStrip_pstsUnderlineHeight = 4;
+    };
+}
Index: app/src/main/java/com/project/base/BaseFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/base/BaseFragment.java	(revision )
+++ app/src/main/java/com/project/base/BaseFragment.java	(revision )
@@ -0,0 +1,88 @@
+package com.project.base;
+
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.project.util.UIUtils;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public abstract class BaseFragment extends Fragment {
+    private LoadingPager mLoadingPager;
+
+    public LoadingPager getLoadingPager(){
+        return mLoadingPager;
+    }
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        if(mLoadingPager == null){//第一次执行
+            mLoadingPager = new LoadingPager(UIUtils.getContext()){
+                public LoadedResult initData(){
+                    return BaseFragment.this.initData();
+                }
+
+                @Override
+                public View initSuccessView() {
+                    return BaseFragment.this.initSuccessView();
+                }
+            };
+
+        }
+
+
+        return mLoadingPager;
+    }
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+    }
+    /**
+     //页面显示分析
+     //Fragment共性-->页面共性-->视图的展示
+     /**
+     任何应用其实就只有4种页面类型
+     ① 加载页面
+     ② 错误页面
+     ③ 空页面
+     ④ 成功页面
+
+     ①②③三种页面一个应用基本是固定的
+     每一个fragment/activity对应的页面④就不一样
+     进入应用的时候显示①,②③④需要加载数据之后才知道显示哪个
+     */
+
+    // 数据加载的流程
+    /**
+     ① 触发加载  	进入页面开始加载/点击某一个按钮的时候加载
+     ② 异步加载数据  -->显示加载视图
+     ③ 处理加载结果
+     ① 成功-->显示成功视图
+     ② 失败
+     ① 数据为空-->显示空视图
+     ② 数据加载失败-->显示加载失败的视图
+     */
+    /**
+     * @des 真正加载数据,但是BaseFragment不知道具体实现,必须实现,定义成为抽象方法,让子类具体实现
+     * @des 它是LoadingPager同名方法
+     * @call loadData()方法被调用的时候
+     */
+    public abstract LoadingPager.LoadedResult initData();
+    /**
+     * @des 返回成功视图,但是不知道具体实现,所以定义成抽象方法
+     * @des 它是LoadingPager同名方法
+     * @call 正在加载数据完成之后,并且数据加载成功,我们必须告知具体的成功视图
+     */
+    public abstract View initSuccessView();
+}
Index: library/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/AndroidManifest.xml	(revision )
+++ library/AndroidManifest.xml	(revision )
@@ -0,0 +1,5 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.astuetz.pagerslidingtabstrip">
+
+    <application />
+</manifest>
\ No newline at end of file
Index: library/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml	(revision )
+++ library/build/intermediates/manifest/androidTest/debug/AndroidManifest.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.astuetz.pagerslidingtabstrip.test" >
+
+    <uses-sdk
+        android:minSdkVersion="15"
+        android:targetSdkVersion="23" />
+
+    <instrumentation
+        android:name="android.test.InstrumentationTestRunner"
+        android:functionalTest="false"
+        android:handleProfiling="false"
+        android:label="Tests for com.astuetz.pagerslidingtabstrip.test"
+        android:targetPackage="com.astuetz.pagerslidingtabstrip.test" />
+
+    <application>
+        <uses-library android:name="android.test.runner" />
+    </application>
+
+</manifest>
\ No newline at end of file
Index: library/build/intermediates/bundles/release/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/release/R.txt	(revision )
+++ library/build/intermediates/bundles/release/R.txt	(revision )
@@ -0,0 +1,33 @@
+int attr pstsDividerColor 0x7f010002
+int attr pstsDividerPadding 0x7f010005
+int attr pstsIndicatorColor 0x7f010000
+int attr pstsIndicatorHeight 0x7f010003
+int attr pstsScrollOffset 0x7f010007
+int attr pstsSelectedTabTextColor 0x7f01000e
+int attr pstsSelectedTabTextSize 0x7f01000d
+int attr pstsShouldExpand 0x7f010009
+int attr pstsTabBackground 0x7f010008
+int attr pstsTabPaddingLeftRight 0x7f010006
+int attr pstsTabTextColor 0x7f01000c
+int attr pstsTabTextSize 0x7f01000b
+int attr pstsTextAllCaps 0x7f01000a
+int attr pstsUnderlineColor 0x7f010001
+int attr pstsUnderlineHeight 0x7f010004
+int color background_tab_pressed 0x7f030000
+int drawable background_tab 0x7f020000
+int[] styleable PagerSlidingTabStrip { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e }
+int styleable PagerSlidingTabStrip_pstsDividerColor 2
+int styleable PagerSlidingTabStrip_pstsDividerPadding 5
+int styleable PagerSlidingTabStrip_pstsIndicatorColor 0
+int styleable PagerSlidingTabStrip_pstsIndicatorHeight 3
+int styleable PagerSlidingTabStrip_pstsScrollOffset 7
+int styleable PagerSlidingTabStrip_pstsSelectedTabTextColor 14
+int styleable PagerSlidingTabStrip_pstsSelectedTabTextSize 13
+int styleable PagerSlidingTabStrip_pstsShouldExpand 9
+int styleable PagerSlidingTabStrip_pstsTabBackground 8
+int styleable PagerSlidingTabStrip_pstsTabPaddingLeftRight 6
+int styleable PagerSlidingTabStrip_pstsTabTextColor 12
+int styleable PagerSlidingTabStrip_pstsTabTextSize 11
+int styleable PagerSlidingTabStrip_pstsTextAllCaps 10
+int styleable PagerSlidingTabStrip_pstsUnderlineColor 1
+int styleable PagerSlidingTabStrip_pstsUnderlineHeight 4
Index: app/src/main/java/com/project/util/IOUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/util/IOUtils.java	(revision )
+++ app/src/main/java/com/project/util/IOUtils.java	(revision )
@@ -0,0 +1,18 @@
+package com.project.util;
+
+import java.io.Closeable;
+import java.io.IOException;
+
+public class IOUtils {
+	/** 关闭流 */
+	public static boolean close(Closeable io) {
+		if (io != null) {
+			try {
+				io.close();
+			} catch (IOException e) {
+				LogUtils.e(e);
+			}
+		}
+		return true;
+	}
+}
Index: library/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/res/values/colors.xml	(revision )
+++ library/res/values/colors.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="background_tab_pressed">#6633B5E5</color>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <color name="tab_indicator_selected">#6666FF</color>
+    
+    <color name="tab_text_selected">#6666FF</color>
+    <color name="tab_text_normal">#333333</color>
+    
+    <color name="item_divider">#ffd7d7d7</color>
+    <color name="bg">#66cccccc</color>
+    <color name="item_download_bg">#cccccccc</color>
+    <color name="menu_bg_normal">#f0f1f3</color>
+    <color name="menu_bg_press">#cecece</color>
+    <color name="app_detail_safe_normal">#999999</color>
+    <color name="app_detail_safe_warning">#ff8800</color>
+
+</resources>
\ No newline at end of file
Index: app/src/main/res/menu/main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/main.xml	(revision )
+++ app/src/main/res/menu/main.xml	(revision )
@@ -0,0 +1,9 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:showAsAction="never"
+        android:title="@string/action_settings"/>
+
+</menu>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision )
@@ -0,0 +1,23 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.5.0'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: app/src/test/java/com/project/activity/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/project/activity/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/project/activity/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.project.activity;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: library/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build.gradle	(revision )
+++ library/build.gradle	(revision )
@@ -0,0 +1,24 @@
+apply plugin: 'android-library'
+
+dependencies {
+    compile 'com.android.support:support-v4:19.0.0'
+}
+
+android {
+    compileSdkVersion 15
+    buildToolsVersion "23.0.2"
+
+    defaultConfig {
+        minSdkVersion 15
+        targetSdkVersion 23
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
+
Index: library/build/generated/source/buildConfig/debug/com/astuetz/pagerslidingtabstrip/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/buildConfig/debug/com/astuetz/pagerslidingtabstrip/BuildConfig.java	(revision )
+++ library/build/generated/source/buildConfig/debug/com/astuetz/pagerslidingtabstrip/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.astuetz.pagerslidingtabstrip;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.astuetz.pagerslidingtabstrip";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = -1;
+  public static final String VERSION_NAME = "";
+}
Index: .idea/copyright/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/copyright/profiles_settings.xml	(revision )
+++ .idea/copyright/profiles_settings.xml	(revision )
@@ -0,0 +1,3 @@
+<component name="CopyrightManager">
+  <settings default="" />
+</component>
\ No newline at end of file
Index: library/build/intermediates/bundles/debug/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/debug/res/values/values.xml	(revision )
+++ library/build/intermediates/bundles/debug/res/values/values.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="background_tab_pressed">#6633B5E5</color>
+    <declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable>
+</resources>
\ No newline at end of file
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision )
+++ gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: app/src/main/java/com/project/base/BaseApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/base/BaseApplication.java	(revision )
+++ app/src/main/java/com/project/base/BaseApplication.java	(revision )
@@ -0,0 +1,70 @@
+package com.project.base;
+
+import android.app.Application;
+import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
+
+/**
+ * @author  Administrator
+ * @time 	2015-7-15 上午10:50:49
+ * @des	定义一个全局的盒子.里面放置的对象,属性,方法都是全局可以调用
+ *
+ * @version $Rev: 8 $
+ * @updateAuthor $Author: admin $
+ * @updateDate $Date: 2015-07-15 17:06:45 +0800 (星期三, 15 七月 2015) $
+ * @updateDes TODO
+ */
+public class BaseApplication extends Application {
+
+	private static Context	mContext;
+	private static Thread	mMainThread;
+	private static long	mMainTreadId;
+	private static Looper	mMainLooper;
+	private static Handler	mHandler;
+
+	public static Handler getHandler() {
+		return mHandler;
+	}
+
+	public static Context getContext() {
+		return mContext;
+	}
+
+	public static Thread getMainThread() {
+		return mMainThread;
+	}
+
+	public static long getMainTreadId() {
+		return mMainTreadId;
+	}
+
+	public static Looper getMainThreadLooper() {
+		return mMainLooper;
+	}
+
+	@Override
+	public void onCreate() {// 程序的入口
+		// 初始化化一些.常用属性.然后放到盒子里面来
+		// 上下文
+		mContext = getApplicationContext();
+
+		// 主线程
+		mMainThread = Thread.currentThread();
+
+		// 主线程Id
+		mMainTreadId = android.os.Process.myTid();
+
+		// tid thread
+		// uid user
+		// pid process
+		// 主线程Looper对象
+		mMainLooper = getMainLooper();
+
+		// 定义一个handler
+
+		mHandler = new Handler();
+		super.onCreate();
+	}
+
+}
Index: app/src/main/java/com/project/base/LoadingPager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/base/LoadingPager.java	(revision )
+++ app/src/main/java/com/project/base/LoadingPager.java	(revision )
@@ -0,0 +1,167 @@
+package com.project.base;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.FrameLayout;
+
+import com.project.activity.R;
+import com.project.util.UIUtils;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+
+public abstract  class LoadingPager extends FrameLayout {
+    /**
+     //页面显示分析
+     //Fragment共性-->页面共性-->视图的展示
+     /**
+     任何应用其实就只有4种页面类型
+     ① 加载页面
+     ② 错误页面
+     ③ 空页面
+     ④ 成功页面
+
+     ①②③三种页面一个应用基本是固定的
+     每一个fragment/activity对应的页面④就不一样
+     进入应用的时候显示①,②③④需要加载数据之后才知道显示哪个
+     */
+    //默认情况
+    public static final int STATE_NONE = -1;
+    //正在请求网络
+    public static final int STATE_LOADING = 0;
+    //空状态
+    public static final int STATE_EMPTY = 1;
+    //错误状态
+    public static final int STATE_ERROR = 2;
+    //成功状态
+    public static final int STATE_SUCCESS = 3;
+
+    public int mCurState = STATE_NONE;
+
+    private View	mLoadingView;
+    private View	mErrorView;
+    private View	mEmptyView;
+    private View  mSuccessView;
+
+    public LoadingPager(Context context) {
+        super(context);
+        initCommonView();
+    }
+    /*
+    初始化常规视图
+    LoadingPager初始化的时候
+     */
+    private void initCommonView() {
+        //加载页面
+        mLoadingView = View.inflate(UIUtils.getContext(), R.layout.pager_loading,null);
+        this.addView(mLoadingView);
+        //错误页面
+        mErrorView = View.inflate(UIUtils.getContext(),R.layout.pager_error,null);
+        mErrorView.findViewById(R.id.error_btn_retry).setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //从先触发加载数据
+                loadData();
+            }
+        });
+        this.addView(mErrorView);
+        //3.空页面
+        mEmptyView = View.inflate(UIUtils.getContext(),R.layout.pager_empty,null);
+        this.addView(mEmptyView);
+        refreshUI();//1.loadiingPager初始化的时候
+    }
+     /**
+     * @des 根据当前状态显示不同的view
+     * @call 1. LoadingPager初始化的时候
+     * @call 2.	显示正在加载数据
+     * @call 3. 正在加载数据执行完成的时候
+     */
+    private void refreshUI() {
+
+        // 控制loading视图显示隐藏
+        mLoadingView.setVisibility(((mCurState == STATE_LOADING) || (mCurState == STATE_NONE)) ? View.VISIBLE : View.GONE);
+
+        // 控制emptyView视图显示隐藏
+        mEmptyView.setVisibility((mCurState == STATE_EMPTY) ? View.VISIBLE : View.GONE);
+
+        // 控制errorView视图显示隐藏
+        mErrorView.setVisibility((mCurState == STATE_ERROR) ? View.VISIBLE : View.GONE);
+
+        if (mSuccessView == null && mCurState == STATE_SUCCESS) {
+            // 创建成功视图
+            mSuccessView = initSuccessView();
+            this.addView(mSuccessView);
+        }
+
+        if (mSuccessView != null) {
+            // 控制success视图显示隐藏
+            mSuccessView.setVisibility((mCurState == STATE_SUCCESS) ? View.VISIBLE : View.GONE);
+        }
+
+    }
+// 数据加载的流程
+    /**
+     ① 触发加载  	进入页面开始加载/点击某一个按钮的时候加载
+     ② 异步加载数据  -->显示加载视图
+     ③ 处理加载结果
+     ① 成功-->显示成功视图
+     ② 失败
+     ① 数据为空-->显示空视图
+     ② 数据加载失败-->显示加载失败的视图
+     */
+    /**
+     * @des 触发加载数据
+     * @call 暴露给外界调用,其实就是外界  触发加载数据
+     */
+    public void loadData() {
+        //如果加载成功，无需再次加载
+        if(mCurState != STATE_SUCCESS && mCurState != STATE_LOADING){
+            // 保证每次执行的时候一定是加载中视图,而不是上次的mCurState
+            int state = STATE_LOADING;
+            mCurState = state;
+            refreshUI();//2.显示正在加载数据
+            new Thread(new LoadDataTask()).start();
+        }
+        
+    }
+    class LoadDataTask implements Runnable{
+
+        @Override
+        public void run() {
+            //异步加载数据
+            LoadedResult tempState = initData();
+            //处理加载结果
+            mCurState = tempState.getState();//error
+            UIUtils.postTaskSafely(new Runnable() {
+                @Override
+                public void run() {
+                    //刷新ui
+                    refreshUI();//正在加载数据执行完成的时候
+                }
+            });
+        }
+    }
+    /**
+     * @des 正在加载数据,必须实现,但是不知道具体实现,定义成为抽象方法,让子类具体实现
+     * @call loadData()方法被调用的时候
+     */
+    public abstract LoadedResult initData();
+    /**
+     * @des 返回成功视图
+     * @call 正在加载数据完成之后,并且数据加载成功,我们必须告知具体的成功视图
+     */
+    public abstract View initSuccessView();
+    public enum LoadedResult{
+        SUCCESS(STATE_SUCCESS),ERROR(STATE_ERROR),EMPTY(STATE_EMPTY);
+        int state;
+        public int getState(){
+            return state;
+        }
+        private LoadedResult(int state){
+            this.state = state;
+        }
+    }
+
+}
Index: library/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml	(revision )
+++ library/build/intermediates/incremental/mergeDebugAndroidTestResources/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="debug$Generated" generated="true"><source path="D:\GooglePlay\library\build\intermediates\bundles\debug\res"/></dataSet><dataSet config="main$Generated" generated="true"><source path="D:\GooglePlay\library\src\androidTest\res"/><source path="D:\GooglePlay\library\build\generated\res\rs\androidTest\debug"/><source path="D:\GooglePlay\library\build\generated\res\resValues\androidTest\debug"/></dataSet><dataSet config="debug" generated-set="debug$Generated"><source path="D:\GooglePlay\library\build\intermediates\bundles\debug\res"><file name="background_tab" path="D:\GooglePlay\library\build\intermediates\bundles\debug\res\drawable\background_tab.xml" qualifiers="" type="drawable"/><file path="D:\GooglePlay\library\build\intermediates\bundles\debug\res\values\values.xml" qualifiers=""><declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable><color name="background_tab_pressed">#6633B5E5</color></file></source></dataSet><dataSet config="main" generated-set="main$Generated"><source path="D:\GooglePlay\library\src\androidTest\res"/><source path="D:\GooglePlay\library\build\generated\res\rs\androidTest\debug"/><source path="D:\GooglePlay\library\build\generated\res\resValues\androidTest\debug"/></dataSet><mergedItems><configuration qualifiers=""><declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable></configuration></mergedItems></merger>
\ No newline at end of file
Index: library/build/intermediates/bundles/debug/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/debug/AndroidManifest.xml	(revision )
+++ library/build/intermediates/bundles/debug/AndroidManifest.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.astuetz.pagerslidingtabstrip" >
+
+    <uses-sdk
+        android:minSdkVersion="15"
+        android:targetSdkVersion="23" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: app/src/main/res/layout/pager_error.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/pager_error.xml	(revision )
+++ app/src/main/res/layout/pager_error.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:gravity="center"
+        android:orientation="vertical" >
+
+        <ImageView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:src="@drawable/ic_error_page" />
+
+        <Button
+            android:id="@+id/error_btn_retry"
+            android:layout_width="wrap_content"
+            android:layout_height="34dp"
+            android:layout_marginTop="10dp"
+            android:background="@drawable/selector_btn_bg"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:text="加载失败,点击重试"
+            android:textColor="#ff717171"
+            android:textSize="12sp" />
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
Index: library/build/generated/source/buildConfig/androidTest/debug/com/astuetz/pagerslidingtabstrip/test/BuildConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/buildConfig/androidTest/debug/com/astuetz/pagerslidingtabstrip/test/BuildConfig.java	(revision )
+++ library/build/generated/source/buildConfig/androidTest/debug/com/astuetz/pagerslidingtabstrip/test/BuildConfig.java	(revision )
@@ -0,0 +1,13 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.astuetz.pagerslidingtabstrip.test;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String APPLICATION_ID = "com.astuetz.pagerslidingtabstrip.test";
+  public static final String BUILD_TYPE = "debug";
+  public static final String FLAVOR = "";
+  public static final int VERSION_CODE = -1;
+  public static final String VERSION_NAME = "";
+}
Index: library/build/generated/source/r/debug/com/astuetz/pagerslidingtabstrip/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/generated/source/r/debug/com/astuetz/pagerslidingtabstrip/R.java	(revision )
+++ library/build/generated/source/r/debug/com/astuetz/pagerslidingtabstrip/R.java	(revision )
@@ -0,0 +1,425 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.astuetz.pagerslidingtabstrip;
+
+public final class R {
+    public static final class attr {
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsDividerColor=0x7f010002;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsDividerPadding=0x7f010005;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsIndicatorColor=0x7f010000;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsIndicatorHeight=0x7f010003;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsScrollOffset=0x7f010007;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsSelectedTabTextColor=0x7f01000e;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsSelectedTabTextSize=0x7f01000d;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsShouldExpand=0x7f010009;
+        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+         */
+        public static int pstsTabBackground=0x7f010008;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTabPaddingLeftRight=0x7f010006;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTabTextColor=0x7f01000c;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTabTextSize=0x7f01000b;
+        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsTextAllCaps=0x7f01000a;
+        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsUnderlineColor=0x7f010001;
+        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+         */
+        public static int pstsUnderlineHeight=0x7f010004;
+    }
+    public static final class color {
+        public static int background_tab_pressed=0x7f030000;
+    }
+    public static final class drawable {
+        public static int background_tab=0x7f020000;
+    }
+    public static final class styleable {
+        /** Attributes that can be used with a PagerSlidingTabStrip.
+           <p>Includes the following attributes:</p>
+           <table>
+           <colgroup align="left" />
+           <colgroup align="left" />
+           <tr><th>Attribute</th><th>Description</th></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsDividerColor com.astuetz.pagerslidingtabstrip:pstsDividerColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsDividerPadding com.astuetz.pagerslidingtabstrip:pstsDividerPadding}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsIndicatorColor com.astuetz.pagerslidingtabstrip:pstsIndicatorColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsIndicatorHeight com.astuetz.pagerslidingtabstrip:pstsIndicatorHeight}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsScrollOffset com.astuetz.pagerslidingtabstrip:pstsScrollOffset}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsSelectedTabTextColor com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsSelectedTabTextSize com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextSize}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsShouldExpand com.astuetz.pagerslidingtabstrip:pstsShouldExpand}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabBackground com.astuetz.pagerslidingtabstrip:pstsTabBackground}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabPaddingLeftRight com.astuetz.pagerslidingtabstrip:pstsTabPaddingLeftRight}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabTextColor com.astuetz.pagerslidingtabstrip:pstsTabTextColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTabTextSize com.astuetz.pagerslidingtabstrip:pstsTabTextSize}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsTextAllCaps com.astuetz.pagerslidingtabstrip:pstsTextAllCaps}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsUnderlineColor com.astuetz.pagerslidingtabstrip:pstsUnderlineColor}</code></td><td></td></tr>
+           <tr><td><code>{@link #PagerSlidingTabStrip_pstsUnderlineHeight com.astuetz.pagerslidingtabstrip:pstsUnderlineHeight}</code></td><td></td></tr>
+           </table>
+           @see #PagerSlidingTabStrip_pstsDividerColor
+           @see #PagerSlidingTabStrip_pstsDividerPadding
+           @see #PagerSlidingTabStrip_pstsIndicatorColor
+           @see #PagerSlidingTabStrip_pstsIndicatorHeight
+           @see #PagerSlidingTabStrip_pstsScrollOffset
+           @see #PagerSlidingTabStrip_pstsSelectedTabTextColor
+           @see #PagerSlidingTabStrip_pstsSelectedTabTextSize
+           @see #PagerSlidingTabStrip_pstsShouldExpand
+           @see #PagerSlidingTabStrip_pstsTabBackground
+           @see #PagerSlidingTabStrip_pstsTabPaddingLeftRight
+           @see #PagerSlidingTabStrip_pstsTabTextColor
+           @see #PagerSlidingTabStrip_pstsTabTextSize
+           @see #PagerSlidingTabStrip_pstsTextAllCaps
+           @see #PagerSlidingTabStrip_pstsUnderlineColor
+           @see #PagerSlidingTabStrip_pstsUnderlineHeight
+         */
+        public static final int[] PagerSlidingTabStrip = {
+            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
+            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
+            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
+            0x7f01000c, 0x7f01000d, 0x7f01000e
+        };
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsDividerColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsDividerColor
+        */
+        public static int PagerSlidingTabStrip_pstsDividerColor = 2;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsDividerPadding}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsDividerPadding
+        */
+        public static int PagerSlidingTabStrip_pstsDividerPadding = 5;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsIndicatorColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsIndicatorColor
+        */
+        public static int PagerSlidingTabStrip_pstsIndicatorColor = 0;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsIndicatorHeight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsIndicatorHeight
+        */
+        public static int PagerSlidingTabStrip_pstsIndicatorHeight = 3;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsScrollOffset}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsScrollOffset
+        */
+        public static int PagerSlidingTabStrip_pstsScrollOffset = 7;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsSelectedTabTextColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextColor
+        */
+        public static int PagerSlidingTabStrip_pstsSelectedTabTextColor = 14;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsSelectedTabTextSize}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsSelectedTabTextSize
+        */
+        public static int PagerSlidingTabStrip_pstsSelectedTabTextSize = 13;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsShouldExpand}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsShouldExpand
+        */
+        public static int PagerSlidingTabStrip_pstsShouldExpand = 9;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabBackground}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
+or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabBackground
+        */
+        public static int PagerSlidingTabStrip_pstsTabBackground = 8;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabPaddingLeftRight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabPaddingLeftRight
+        */
+        public static int PagerSlidingTabStrip_pstsTabPaddingLeftRight = 6;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabTextColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabTextColor
+        */
+        public static int PagerSlidingTabStrip_pstsTabTextColor = 12;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTabTextSize}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTabTextSize
+        */
+        public static int PagerSlidingTabStrip_pstsTabTextSize = 11;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsTextAllCaps}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsTextAllCaps
+        */
+        public static int PagerSlidingTabStrip_pstsTextAllCaps = 10;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsUnderlineColor}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
+"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsUnderlineColor
+        */
+        public static int PagerSlidingTabStrip_pstsUnderlineColor = 1;
+        /**
+          <p>This symbol is the offset where the {@link com.astuetz.pagerslidingtabstrip.R.attr#pstsUnderlineHeight}
+          attribute's value can be found in the {@link #PagerSlidingTabStrip} array.
+
+
+          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
+Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
+in (inches), mm (millimeters).
+<p>This may also be a reference to a resource (in the form
+"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
+theme attribute (in the form
+"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
+containing a value of this type.
+          @attr name com.astuetz.pagerslidingtabstrip:pstsUnderlineHeight
+        */
+        public static int PagerSlidingTabStrip_pstsUnderlineHeight = 4;
+    };
+}
Index: app/src/androidTest/java/com/project/activity/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/project/activity/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/project/activity/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.project.activity;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/project/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/activity/MainActivity.java	(revision )
+++ app/src/main/java/com/project/activity/MainActivity.java	(revision )
@@ -0,0 +1,140 @@
+package com.project.activity;
+
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentStatePagerAdapter;
+import android.support.v4.view.PagerAdapter;
+import android.support.v4.view.ViewPager;
+import android.os.Bundle;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.astuetz.PagerSlidingTabStripExtends;
+import com.project.base.BaseFragment;
+import com.project.factory.FragmentFactory;
+import com.project.util.LogUtils;
+import com.project.util.UIUtils;
+
+public class MainActivity extends AppCompatActivity{
+    private com.astuetz.PagerSlidingTabStripExtends mMainTabs;
+    private ViewPager mViewPager;
+    private String[] mMainTitles;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        initView();
+        initActionBar();
+        initData();
+        initListener();
+        //initAdapter();
+    }
+
+    private void initListener() {
+        mMainTabs.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
+            @Override
+            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+
+            }
+
+            @Override
+            public void onPageSelected(int position) {
+                  //完成触发加载
+                BaseFragment fragment = FragmentFactory.getFragment(position);
+                if(fragment != null){
+                    fragment.getLoadingPager().loadData();
+                }
+            }
+
+            @Override
+            public void onPageScrollStateChanged(int state) {
+
+            }
+        });
+    }
+
+    private void initActionBar() {
+        ActionBar actionBar = getSupportActionBar();
+        actionBar.setLogo(R.drawable.ic_launcher);
+        actionBar.setTitle("GooglePlay");
+    }
+
+    private void initView(){
+         mMainTabs = (PagerSlidingTabStripExtends) findViewById(R.id.main_tabs);
+        mViewPager = (ViewPager) findViewById(R.id.main_viewPager);
+
+    }
+    private void initData(){
+        mMainTitles = UIUtils.getStringArr(R.array.main_titles);
+       // MainPagerAdapter adapter = new MainPagerAdapter();
+        MainFragmentStatePagerAdapter adapter = new MainFragmentStatePagerAdapter(getSupportFragmentManager());
+        mViewPager.setAdapter(adapter);
+        mMainTabs.setViewPager(mViewPager);
+    }
+
+    class MainPagerAdapter extends PagerAdapter {
+
+        @Override
+        public int getCount() {
+            if(mMainTitles !=null){
+                return mMainTitles.length;
+            }
+            return 0;
+        }
+
+        @Override
+        public boolean isViewFromObject(View view, Object object) {
+            return view==object;
+        }
+
+        @Override
+        public Object instantiateItem(ViewGroup container, int position) {
+            TextView tv = new TextView(UIUtils.getContext());
+            tv.setText(mMainTitles[position]);
+            container.addView(tv);
+            return tv;
+        }
+
+        @Override
+        public void destroyItem(ViewGroup container, int position, Object object) {
+            container.removeView((View)object);
+        }
+
+        @Override
+        public CharSequence getPageTitle(int position) {
+            return mMainTitles[position];
+        }
+    }
+    class MainFragmentStatePagerAdapter extends FragmentStatePagerAdapter {
+
+        public MainFragmentStatePagerAdapter(FragmentManager fm) {
+            super(fm);
+        }
+
+        @Override
+        public int getCount() {
+            if(mMainTitles !=null){
+                return mMainTitles.length;
+            }
+          return 0;
+        }
+
+
+        @Override
+        public Fragment getItem(int position) {
+            Fragment fragment = FragmentFactory.getFragment(position);
+            //LogUtils.sf("初始化"+mMainTitles[position]);
+            return fragment;
+        }
+
+        @Override
+        public CharSequence getPageTitle(int position) {
+            return mMainTitles[position];
+        }
+    }
+}
Index: app/src/main/java/com/project/fragment/HotFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/HotFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/HotFragment.java	(revision )
@@ -0,0 +1,50 @@
+package com.project.fragment;
+
+import android.os.SystemClock;
+import android.view.View;
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class HotFragment extends BaseFragment {
+//    @Override
+//    public LoadingPager.LoadedResult initData() {// 真正加载数据
+//        // 执行耗时的操作
+//        SystemClock.sleep(2000);
+//        // 随机返回3中状态中的一种
+//
+//        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+//        Random random = new Random();
+//        int index = random.nextInt(arr.length);// 0 1 2
+//
+//        return arr[2];
+//    }
+
+    @Override
+    public LoadingPager.LoadedResult initData() {
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+        // 返回成功的视图
+        TextView tv = new TextView(UIUtils.getContext());
+        tv.setText(this.getClass().getSimpleName());
+        return tv;
+    }
+}
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/project/util/FileUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/util/FileUtils.java	(revision )
+++ app/src/main/java/com/project/util/FileUtils.java	(revision )
@@ -0,0 +1,405 @@
+package com.project.util;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.RandomAccessFile;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Properties;
+
+import android.os.Environment;
+
+/**
+ * 
+ * @author 写文件的工具类
+ * 
+ */
+public class FileUtils {
+
+	public static final String ROOT_DIR = "Android/data/"
+			+ UIUtils.getPackageName();
+	public static final String DOWNLOAD_DIR = "download";
+	public static final String CACHE_DIR = "cache";
+	public static final String ICON_DIR = "icon";
+
+	/** 判断SD卡是否挂载 */
+	public static boolean isSDCardAvailable() {
+		if (Environment.MEDIA_MOUNTED.equals(Environment
+				.getExternalStorageState())) {
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	/** 获取下载目录 */
+	public static String getDownloadDir() {
+		return getDir(DOWNLOAD_DIR);
+	}
+
+	/** 获取缓存目录 */
+	public static String getCacheDir() {
+		return getDir(CACHE_DIR);
+	}
+
+	/** 获取icon目录 */
+	public static String getIconDir() {
+		return getDir(ICON_DIR);
+	}
+
+	/** 获取应用目录，当SD卡存在时，获取SD卡上的目录，当SD卡不存在时，获取应用的cache目录 */
+	public static String getDir(String name) {
+		StringBuilder sb = new StringBuilder();
+		if (isSDCardAvailable()) {
+			sb.append(getExternalStoragePath());
+		} else {
+			sb.append(getCachePath());
+		}
+		sb.append(name);
+		sb.append(File.separator);
+		String path = sb.toString();
+		if (createDirs(path)) {
+			return path;
+		} else {
+			return null;
+		}
+	}
+
+	/** 获取SD下的应用目录 */
+	public static String getExternalStoragePath() {
+		StringBuilder sb = new StringBuilder();
+		sb.append(Environment.getExternalStorageDirectory().getAbsolutePath());
+		sb.append(File.separator);
+		sb.append(ROOT_DIR);
+		sb.append(File.separator);
+		return sb.toString();
+	}
+
+	/** 获取应用的cache目录 */
+	public static String getCachePath() {
+		File f = UIUtils.getContext().getCacheDir();
+		if (null == f) {
+			return null;
+		} else {
+			return f.getAbsolutePath() + "/";
+		}
+	}
+
+	/** 创建文件夹 */
+	public static boolean createDirs(String dirPath) {
+		File file = new File(dirPath);
+		if (!file.exists() || !file.isDirectory()) {
+			return file.mkdirs();
+		}
+		return true;
+	}
+
+	/** 复制文件，可以选择是否删除源文件 */
+	public static boolean copyFile(String srcPath, String destPath,
+			boolean deleteSrc) {
+		File srcFile = new File(srcPath);
+		File destFile = new File(destPath);
+		return copyFile(srcFile, destFile, deleteSrc);
+	}
+
+	/** 复制文件，可以选择是否删除源文件 */
+	public static boolean copyFile(File srcFile, File destFile,
+			boolean deleteSrc) {
+		if (!srcFile.exists() || !srcFile.isFile()) {
+			return false;
+		}
+		InputStream in = null;
+		OutputStream out = null;
+		try {
+			in = new FileInputStream(srcFile);
+			out = new FileOutputStream(destFile);
+			byte[] buffer = new byte[1024];
+			int i = -1;
+			while ((i = in.read(buffer)) > 0) {
+				out.write(buffer, 0, i);
+				out.flush();
+			}
+			if (deleteSrc) {
+				srcFile.delete();
+			}
+		} catch (Exception e) {
+			LogUtils.e(e);
+			return false;
+		} finally {
+			IOUtils.close(out);
+			IOUtils.close(in);
+		}
+		return true;
+	}
+
+	/** 判断文件是否可写 */
+	public static boolean isWriteable(String path) {
+		try {
+			if (StringUtils.isEmpty(path)) {
+				return false;
+			}
+			File f = new File(path);
+			return f.exists() && f.canWrite();
+		} catch (Exception e) {
+			LogUtils.e(e);
+			return false;
+		}
+	}
+
+	/** 修改文件的权限,例如"777"等 */
+	public static void chmod(String path, String mode) {
+		try {
+			String command = "chmod " + mode + " " + path;
+			Runtime runtime = Runtime.getRuntime();
+			runtime.exec(command);
+		} catch (Exception e) {
+			LogUtils.e(e);
+		}
+	}
+
+	/**
+	 * 把数据写入文件
+	 * 
+	 * @param is
+	 *            数据流
+	 * @param path
+	 *            文件路径
+	 * @param recreate
+	 *            如果文件存在，是否需要删除重建
+	 * @return 是否写入成功
+	 */
+	public static boolean writeFile(InputStream is, String path,
+			boolean recreate) {
+		boolean res = false;
+		File f = new File(path);
+		FileOutputStream fos = null;
+		try {
+			if (recreate && f.exists()) {
+				f.delete();
+			}
+			if (!f.exists() && null != is) {
+				File parentFile = new File(f.getParent());
+				parentFile.mkdirs();
+				int count = -1;
+				byte[] buffer = new byte[1024];
+				fos = new FileOutputStream(f);
+				while ((count = is.read(buffer)) != -1) {
+					fos.write(buffer, 0, count);
+				}
+				res = true;
+			}
+		} catch (Exception e) {
+			LogUtils.e(e);
+		} finally {
+			IOUtils.close(fos);
+			IOUtils.close(is);
+		}
+		return res;
+	}
+
+	/**
+	 * 把字符串数据写入文件
+	 * 
+	 * @param content
+	 *            需要写入的字符串
+	 * @param path
+	 *            文件路径名称
+	 * @param append
+	 *            是否以添加的模式写入
+	 * @return 是否写入成功
+	 */
+	public static boolean writeFile(byte[] content, String path, boolean append) {
+		boolean res = false;
+		File f = new File(path);
+		RandomAccessFile raf = null;
+		try {
+			if (f.exists()) {
+				if (!append) {
+					f.delete();
+					f.createNewFile();
+				}
+			} else {
+				f.createNewFile();
+			}
+			if (f.canWrite()) {
+				raf = new RandomAccessFile(f, "rw");
+				raf.seek(raf.length());
+				raf.write(content);
+				res = true;
+			}
+		} catch (Exception e) {
+			LogUtils.e(e);
+		} finally {
+			IOUtils.close(raf);
+		}
+		return res;
+	}
+
+	/**
+	 * 把字符串数据写入文件
+	 * 
+	 * @param content
+	 *            需要写入的字符串
+	 * @param path
+	 *            文件路径名称
+	 * @param append
+	 *            是否以添加的模式写入
+	 * @return 是否写入成功
+	 */
+	public static boolean writeFile(String content, String path, boolean append) {
+		return writeFile(content.getBytes(), path, append);
+	}
+
+	/**
+	 * 把键值对写入文件
+	 * 
+	 * @param filePath
+	 *            文件路径
+	 * @param key
+	 *            键
+	 * @param value
+	 *            值
+	 * @param comment
+	 *            该键值对的注释
+	 */
+	public static void writeProperties(String filePath, String key,
+			String value, String comment) {
+		if (StringUtils.isEmpty(key) || StringUtils.isEmpty(filePath)) {
+			return;
+		}
+		FileInputStream fis = null;
+		FileOutputStream fos = null;
+		File f = new File(filePath);
+		try {
+			if (!f.exists() || !f.isFile()) {
+				f.createNewFile();
+			}
+			fis = new FileInputStream(f);
+			Properties p = new Properties();
+			p.load(fis);// 先读取文件，再把键值对追加到后面
+			p.setProperty(key, value);
+			fos = new FileOutputStream(f);
+			p.store(fos, comment);
+		} catch (Exception e) {
+			LogUtils.e(e);
+		} finally {
+			IOUtils.close(fis);
+			IOUtils.close(fos);
+		}
+	}
+
+	/** 根据值读取 */
+	public static String readProperties(String filePath, String key,
+			String defaultValue) {
+		if (StringUtils.isEmpty(key) || StringUtils.isEmpty(filePath)) {
+			return null;
+		}
+		String value = null;
+		FileInputStream fis = null;
+		File f = new File(filePath);
+		try {
+			if (!f.exists() || !f.isFile()) {
+				f.createNewFile();
+			}
+			fis = new FileInputStream(f);
+			Properties p = new Properties();
+			p.load(fis);
+			value = p.getProperty(key, defaultValue);
+		} catch (IOException e) {
+			LogUtils.e(e);
+		} finally {
+			IOUtils.close(fis);
+		}
+		return value;
+	}
+
+	/** 把字符串键值对的map写入文件 */
+	public static void writeMap(String filePath, Map<String, String> map,
+			boolean append, String comment) {
+		if (map == null || map.size() == 0 || StringUtils.isEmpty(filePath)) {
+			return;
+		}
+		FileInputStream fis = null;
+		FileOutputStream fos = null;
+		File f = new File(filePath);
+		try {
+			if (!f.exists() || !f.isFile()) {
+				f.createNewFile();
+			}
+			Properties p = new Properties();
+			if (append) {
+				fis = new FileInputStream(f);
+				p.load(fis);// 先读取文件，再把键值对追加到后面
+			}
+			p.putAll(map);
+			fos = new FileOutputStream(f);
+			p.store(fos, comment);
+		} catch (Exception e) {
+			LogUtils.e(e);
+		} finally {
+			IOUtils.close(fis);
+			IOUtils.close(fos);
+		}
+	}
+
+	/** 把字符串键值对的文件读入map */
+	@SuppressWarnings({ "rawtypes", "unchecked" })
+	public static Map<String, String> readMap(String filePath,
+			String defaultValue) {
+		if (StringUtils.isEmpty(filePath)) {
+			return null;
+		}
+		Map<String, String> map = null;
+		FileInputStream fis = null;
+		File f = new File(filePath);
+		try {
+			if (!f.exists() || !f.isFile()) {
+				f.createNewFile();
+			}
+			fis = new FileInputStream(f);
+			Properties p = new Properties();
+			p.load(fis);
+			map = new HashMap<String, String>((Map) p);// 因为properties继承了map，所以直接通过p来构造一个map
+		} catch (Exception e) {
+			LogUtils.e(e);
+		} finally {
+			IOUtils.close(fis);
+		}
+		return map;
+	}
+
+	/** 改名 */
+	public static boolean copy(String src, String des, boolean delete) {
+		File file = new File(src);
+		if (!file.exists()) {
+			return false;
+		}
+		File desFile = new File(des);
+		FileInputStream in = null;
+		FileOutputStream out = null;
+		try {
+			in = new FileInputStream(file);
+			out = new FileOutputStream(desFile);
+			byte[] buffer = new byte[1024];
+			int count = -1;
+			while ((count = in.read(buffer)) != -1) {
+				out.write(buffer, 0, count);
+				out.flush();
+			}
+		} catch (Exception e) {
+			LogUtils.e(e);
+			return false;
+		} finally {
+			IOUtils.close(in);
+			IOUtils.close(out);
+		}
+		if (delete) {
+			file.delete();
+		}
+		return true;
+	}
+}
Index: app/src/main/java/com/project/base/BaseFragmentCommon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/base/BaseFragmentCommon.java	(revision )
+++ app/src/main/java/com/project/base/BaseFragmentCommon.java	(revision )
@@ -0,0 +1,44 @@
+package com.project.base;
+
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public abstract  class BaseFragmentCommon extends Fragment {
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        init();
+        super.onCreate(savedInstanceState);
+    }
+
+
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return initView();
+    }
+    /**
+     * @des 初始化view,而且是必须实现,但是不知道具体实现,定义成抽象方法
+     * @return
+     */
+    public abstract View initView();
+
+    private void init() {
+
+    }
+
+    public void initData(){
+
+    }
+    public void initListener(){
+
+    }
+
+}
Index: library/build/intermediates/incremental/packageReleaseResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/packageReleaseResources/merger.xml	(revision )
+++ library/build/intermediates/incremental/packageReleaseResources/merger.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main$Generated" generated="true"><source path="D:\GooglePlay\library\res"/><source path="D:\GooglePlay\library\build\generated\res\rs\release"/><source path="D:\GooglePlay\library\build\generated\res\resValues\release"/></dataSet><dataSet config="release$Generated" generated="true"><source path="D:\GooglePlay\library\src\release\res"/></dataSet><dataSet config="main" generated-set="main$Generated"><source path="D:\GooglePlay\library\res"><file name="background_tab" path="D:\GooglePlay\library\res\drawable\background_tab.xml" qualifiers="" type="drawable"/><file path="D:\GooglePlay\library\res\values\attrs.xml" qualifiers=""><declare-styleable name="PagerSlidingTabStrip">
+        <attr format="color" name="pstsIndicatorColor"/>
+        <attr format="color" name="pstsUnderlineColor"/>
+        <attr format="color" name="pstsDividerColor"/>
+        <attr format="dimension" name="pstsIndicatorHeight"/>
+        <attr format="dimension" name="pstsUnderlineHeight"/>
+        <attr format="dimension" name="pstsDividerPadding"/>
+        <attr format="dimension" name="pstsTabPaddingLeftRight"/>
+        <attr format="dimension" name="pstsScrollOffset"/>
+        <attr format="reference" name="pstsTabBackground"/>
+        <attr format="boolean" name="pstsShouldExpand"/>
+        <attr format="boolean" name="pstsTextAllCaps"/>
+        <!-- 添加4个属性 -->
+        <attr format="dimension" name="pstsTabTextSize"/>
+        <attr format="color" name="pstsTabTextColor"/>
+        
+        <attr format="dimension" name="pstsSelectedTabTextSize"/>
+        <attr format="color" name="pstsSelectedTabTextColor"/>
+    </declare-styleable></file><file path="D:\GooglePlay\library\res\values\colors.xml" qualifiers=""><color name="background_tab_pressed">#6633B5E5</color></file></source><source path="D:\GooglePlay\library\build\generated\res\rs\release"/><source path="D:\GooglePlay\library\build\generated\res\resValues\release"/></dataSet><dataSet config="release" generated-set="release$Generated"><source path="D:\GooglePlay\library\src\release\res"/></dataSet><mergedItems><configuration qualifiers=""><declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable></configuration></mergedItems></merger>
\ No newline at end of file
Index: app/src/main/java/com/project/util/StringUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/util/StringUtils.java	(revision )
+++ app/src/main/java/com/project/util/StringUtils.java	(revision )
@@ -0,0 +1,129 @@
+package com.project.util;
+
+import android.text.*;
+import android.text.style.CharacterStyle;
+import android.text.style.ForegroundColorSpan;
+
+import java.text.DecimalFormat;
+
+public class StringUtils {
+	public final static String UTF_8 = "utf-8";
+
+	/** 判断字符串是否有值，如果为null或者是空字符串或者只有空格或者为"null"字符串，则返回true，否则则返回false */
+	public static boolean isEmpty(String value) {
+		if (value != null && !"".equalsIgnoreCase(value.trim())
+				&& !"null".equalsIgnoreCase(value.trim())) {
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	/** 判断多个字符串是否相等，如果其中有一个为空字符串或者null，则返回false，只有全相等才返回true */
+	public static boolean isEquals(String... agrs) {
+		String last = null;
+		for (int i = 0; i < agrs.length; i++) {
+			String str = agrs[i];
+			if (isEmpty(str)) {
+				return false;
+			}
+			if (last != null && !str.equalsIgnoreCase(last)) {
+				return false;
+			}
+			last = str;
+		}
+		return true;
+	}
+
+	/**
+	 * 返回一个高亮spannable
+	 * 
+	 * @param content
+	 *            文本内容
+	 * @param color
+	 *            高亮颜色
+	 * @param start
+	 *            起始位置
+	 * @param end
+	 *            结束位置
+	 * @return 高亮spannable
+	 */
+	public static CharSequence getHighLightText(String content, int color,
+			int start, int end) {
+		if (TextUtils.isEmpty(content)) {
+			return "";
+		}
+		start = start >= 0 ? start : 0;
+		end = end <= content.length() ? end : content.length();
+		SpannableString spannable = new SpannableString(content);
+		CharacterStyle span = new ForegroundColorSpan(color);
+		spannable.setSpan(span, start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+		return spannable;
+	}
+
+	/**
+	 * 获取链接样式的字符串，即字符串下面有下划线
+	 * 
+	 * @param resId
+	 *            文字资源
+	 * @return 返回链接样式的字符串
+	 */
+	public static Spanned getHtmlStyleString(int resId) {
+		StringBuilder sb = new StringBuilder();
+		sb.append("<a href=\"\"><u><b>").append(UIUtils.getString(resId))
+				.append(" </b></u></a>");
+		return Html.fromHtml(sb.toString());
+	}
+
+	/** 格式化文件大小，不保留末尾的0 */
+	public static String formatFileSize(long len) {
+		return formatFileSize(len, false);
+	}
+
+	/** 格式化文件大小，保留末尾的0，达到长度一致 */
+	public static String formatFileSize(long len, boolean keepZero) {
+		String size;
+		DecimalFormat formatKeepTwoZero = new DecimalFormat("#.00");
+		DecimalFormat formatKeepOneZero = new DecimalFormat("#.0");
+		if (len < 1024) {
+			size = String.valueOf(len + "B");
+		} else if (len < 10 * 1024) {
+			// [0, 10KB)，保留两位小数
+			size = String.valueOf(len * 100 / 1024 / (float) 100) + "KB";
+		} else if (len < 100 * 1024) {
+			// [10KB, 100KB)，保留一位小数
+			size = String.valueOf(len * 10 / 1024 / (float) 10) + "KB";
+		} else if (len < 1024 * 1024) {
+			// [100KB, 1MB)，个位四舍五入
+			size = String.valueOf(len / 1024) + "KB";
+		} else if (len < 10 * 1024 * 1024) {
+			// [1MB, 10MB)，保留两位小数
+			if (keepZero) {
+				size = String.valueOf(formatKeepTwoZero.format(len * 100 / 1024
+						/ 1024 / (float) 100))
+						+ "MB";
+			} else {
+				size = String.valueOf(len * 100 / 1024 / 1024 / (float) 100)
+						+ "MB";
+			}
+		} else if (len < 100 * 1024 * 1024) {
+			// [10MB, 100MB)，保留一位小数
+			if (keepZero) {
+				size = String.valueOf(formatKeepOneZero.format(len * 10 / 1024
+						/ 1024 / (float) 10))
+						+ "MB";
+			} else {
+				size = String.valueOf(len * 10 / 1024 / 1024 / (float) 10)
+						+ "MB";
+			}
+		} else if (len < 1024 * 1024 * 1024) {
+			// [100MB, 1GB)，个位四舍五入
+			size = String.valueOf(len / 1024 / 1024) + "MB";
+		} else {
+			// [1GB, ...)，保留两位小数
+			size = String.valueOf(len * 100 / 1024 / 1024 / 1024 / (float) 100)
+					+ "GB";
+		}
+		return size;
+	}
+}
Index: app/src/main/res/layout/pager_loading.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/pager_loading.xml	(revision )
+++ app/src/main/res/layout/pager_loading.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+    <ProgressBar
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:indeterminateBehavior="repeat"
+        />
+</RelativeLayout>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision )
+++ .gitignore	(revision )
@@ -0,0 +1,8 @@
+*.iml
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
+/captures
Index: library/build/intermediates/bundles/debug/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/debug/R.txt	(revision )
+++ library/build/intermediates/bundles/debug/R.txt	(revision )
@@ -0,0 +1,33 @@
+int attr pstsDividerColor 0x7f010002
+int attr pstsDividerPadding 0x7f010005
+int attr pstsIndicatorColor 0x7f010000
+int attr pstsIndicatorHeight 0x7f010003
+int attr pstsScrollOffset 0x7f010007
+int attr pstsSelectedTabTextColor 0x7f01000e
+int attr pstsSelectedTabTextSize 0x7f01000d
+int attr pstsShouldExpand 0x7f010009
+int attr pstsTabBackground 0x7f010008
+int attr pstsTabPaddingLeftRight 0x7f010006
+int attr pstsTabTextColor 0x7f01000c
+int attr pstsTabTextSize 0x7f01000b
+int attr pstsTextAllCaps 0x7f01000a
+int attr pstsUnderlineColor 0x7f010001
+int attr pstsUnderlineHeight 0x7f010004
+int color background_tab_pressed 0x7f030000
+int drawable background_tab 0x7f020000
+int[] styleable PagerSlidingTabStrip { 0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e }
+int styleable PagerSlidingTabStrip_pstsDividerColor 2
+int styleable PagerSlidingTabStrip_pstsDividerPadding 5
+int styleable PagerSlidingTabStrip_pstsIndicatorColor 0
+int styleable PagerSlidingTabStrip_pstsIndicatorHeight 3
+int styleable PagerSlidingTabStrip_pstsScrollOffset 7
+int styleable PagerSlidingTabStrip_pstsSelectedTabTextColor 14
+int styleable PagerSlidingTabStrip_pstsSelectedTabTextSize 13
+int styleable PagerSlidingTabStrip_pstsShouldExpand 9
+int styleable PagerSlidingTabStrip_pstsTabBackground 8
+int styleable PagerSlidingTabStrip_pstsTabPaddingLeftRight 6
+int styleable PagerSlidingTabStrip_pstsTabTextColor 12
+int styleable PagerSlidingTabStrip_pstsTabTextSize 11
+int styleable PagerSlidingTabStrip_pstsTextAllCaps 10
+int styleable PagerSlidingTabStrip_pstsUnderlineColor 1
+int styleable PagerSlidingTabStrip_pstsUnderlineHeight 4
Index: library/gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- library/gradle.properties	(revision )
+++ library/gradle.properties	(revision )
@@ -0,0 +1,3 @@
+POM_NAME=PagerSlidingTabStrip Library
+POM_ARTIFACT_ID=pagerslidingtabstrip
+POM_PACKAGING=aar
\ No newline at end of file
Index: app/src/main/java/com/project/factory/FragmentFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/factory/FragmentFactory.java	(revision )
+++ app/src/main/java/com/project/factory/FragmentFactory.java	(revision )
@@ -0,0 +1,80 @@
+package com.project.factory;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.util.SparseArrayCompat;
+import android.util.SparseArray;
+
+import com.project.base.BaseFragment;
+import com.project.fragment.AppFragment;
+import com.project.fragment.CategoryFragment;
+import com.project.fragment.GameFragment;
+import com.project.fragment.HomeFragment;
+import com.project.fragment.HotFragment;
+import com.project.fragment.RecommendFragment;
+import com.project.fragment.SubjectFragment;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class FragmentFactory {
+    /**
+
+     <string-array name="main_titles">
+     <item>首页</item>
+     <item>应用</item>
+     <item>游戏</item>
+     <item>专题</item>
+     <item>推荐</item>
+     <item>分类</item>
+     <item>排行</item>
+     </string-array>
+     */
+    public static final int					FRAGMENT_HOME		= 0;
+    public static final int					FRAGMENT_APP		= 1;
+    public static final int					FRAGMENT_GAME		= 2;
+    public static final int					FRAGMENT_SUBJECT	= 3;
+    public static final int					FRAGMENT_RECOMMEND	= 4;
+    public static final int					FRAGMENT_CATEGORY	= 5;
+    public static final int					FRAGMENT_HOT		= 6;
+
+    static SparseArrayCompat<BaseFragment> cachesFragment = new SparseArrayCompat<BaseFragment>();
+    public static BaseFragment getFragment(int position){
+        BaseFragment fragment = null;
+        // 如果缓存里面有对应的fragment,就直接取出返回
+        BaseFragment tmpFragment = cachesFragment.get(position);
+        if(tmpFragment!=null){
+            fragment = tmpFragment;
+            return fragment;
+
+        }
+        switch(position){
+            case FRAGMENT_HOME:
+                fragment =new HomeFragment();
+            break;
+            case FRAGMENT_APP:
+                fragment = new AppFragment();
+                break;
+            case FRAGMENT_GAME:// 游戏
+                fragment = new GameFragment();
+                break;
+            case FRAGMENT_SUBJECT:// 专题
+                fragment = new SubjectFragment();
+                break;
+            case FRAGMENT_RECOMMEND:// 推荐
+                fragment = new RecommendFragment();
+                break;
+            case FRAGMENT_CATEGORY:// 分类
+                fragment = new CategoryFragment();
+                break;
+            case FRAGMENT_HOT:// 排行
+                fragment = new HotFragment();
+                break;
+
+            default:
+                break;
+        }
+// 保存对应的fragment
+        cachesFragment.put(position, fragment);
+        return fragment;
+    }
+}
Index: library/build/intermediates/incremental/packageDebugResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/packageDebugResources/merger.xml	(revision )
+++ library/build/intermediates/incremental/packageDebugResources/merger.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main$Generated" generated="true"><source path="D:\GooglePlay\library\res"/><source path="D:\GooglePlay\library\build\generated\res\rs\debug"/><source path="D:\GooglePlay\library\build\generated\res\resValues\debug"/></dataSet><dataSet config="debug$Generated" generated="true"><source path="D:\GooglePlay\library\src\debug\res"/></dataSet><dataSet config="main" generated-set="main$Generated"><source path="D:\GooglePlay\library\res"><file name="background_tab" path="D:\GooglePlay\library\res\drawable\background_tab.xml" qualifiers="" type="drawable"/><file path="D:\GooglePlay\library\res\values\attrs.xml" qualifiers=""><declare-styleable name="PagerSlidingTabStrip">
+        <attr format="color" name="pstsIndicatorColor"/>
+        <attr format="color" name="pstsUnderlineColor"/>
+        <attr format="color" name="pstsDividerColor"/>
+        <attr format="dimension" name="pstsIndicatorHeight"/>
+        <attr format="dimension" name="pstsUnderlineHeight"/>
+        <attr format="dimension" name="pstsDividerPadding"/>
+        <attr format="dimension" name="pstsTabPaddingLeftRight"/>
+        <attr format="dimension" name="pstsScrollOffset"/>
+        <attr format="reference" name="pstsTabBackground"/>
+        <attr format="boolean" name="pstsShouldExpand"/>
+        <attr format="boolean" name="pstsTextAllCaps"/>
+        <!-- 添加4个属性 -->
+        <attr format="dimension" name="pstsTabTextSize"/>
+        <attr format="color" name="pstsTabTextColor"/>
+        
+        <attr format="dimension" name="pstsSelectedTabTextSize"/>
+        <attr format="color" name="pstsSelectedTabTextColor"/>
+    </declare-styleable></file><file path="D:\GooglePlay\library\res\values\colors.xml" qualifiers=""><color name="background_tab_pressed">#6633B5E5</color></file></source><source path="D:\GooglePlay\library\build\generated\res\rs\debug"/><source path="D:\GooglePlay\library\build\generated\res\resValues\debug"/></dataSet><dataSet config="debug" generated-set="debug$Generated"><source path="D:\GooglePlay\library\src\debug\res"/></dataSet><mergedItems><configuration qualifiers=""><declare-styleable name="PagerSlidingTabStrip"><attr format="color" name="pstsIndicatorColor"/><attr format="color" name="pstsUnderlineColor"/><attr format="color" name="pstsDividerColor"/><attr format="dimension" name="pstsIndicatorHeight"/><attr format="dimension" name="pstsUnderlineHeight"/><attr format="dimension" name="pstsDividerPadding"/><attr format="dimension" name="pstsTabPaddingLeftRight"/><attr format="dimension" name="pstsScrollOffset"/><attr format="reference" name="pstsTabBackground"/><attr format="boolean" name="pstsShouldExpand"/><attr format="boolean" name="pstsTextAllCaps"/><attr format="dimension" name="pstsTabTextSize"/><attr format="color" name="pstsTabTextColor"/><attr format="dimension" name="pstsSelectedTabTextSize"/><attr format="color" name="pstsSelectedTabTextColor"/></declare-styleable></configuration></mergedItems></merger>
\ No newline at end of file
Index: library/build/intermediates/bundles/release/res/drawable/background_tab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/release/res/drawable/background_tab.xml	(revision )
+++ library/build/intermediates/bundles/release/res/drawable/background_tab.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" android:exitFadeDuration="@android:integer/config_shortAnimTime">
+
+    <item android:state_pressed="true" android:drawable="@color/background_tab_pressed" />
+    <item android:state_focused="true" android:drawable="@color/background_tab_pressed"/>
+    <item android:drawable="@android:color/transparent"/>
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="app_name">GooglePlay</string>
+    <string name="action_settings">Settings</string>
+    <!-- 主页 -->
+    <string-array name="main_titles">
+        <item>首页</item>
+        <item>应用</item>
+        <item>游戏</item>
+        <item>专题</item>
+        <item>推荐</item>
+        <item>分类</item>
+        <item>排行</item>
+    </string-array>
+</resources>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision )
+++ .idea/compiler.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <resourceExtensions />
+    <wildcardResourcePatterns>
+      <entry name="!?*.java" />
+      <entry name="!?*.form" />
+      <entry name="!?*.class" />
+      <entry name="!?*.groovy" />
+      <entry name="!?*.scala" />
+      <entry name="!?*.flex" />
+      <entry name="!?*.kt" />
+      <entry name="!?*.clj" />
+      <entry name="!?*.aj" />
+    </wildcardResourcePatterns>
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="false">
+        <processorPath useClasspath="true" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(revision )
+++ gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: library/build/intermediates/bundles/debug/aapt/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/debug/aapt/AndroidManifest.xml	(revision )
+++ library/build/intermediates/bundles/debug/aapt/AndroidManifest.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.astuetz.pagerslidingtabstrip" >
+
+    <uses-sdk
+        android:minSdkVersion="15"
+        android:targetSdkVersion="23" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: library/build/intermediates/bundles/debug/res/drawable/background_tab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/debug/res/drawable/background_tab.xml	(revision )
+++ library/build/intermediates/bundles/debug/res/drawable/background_tab.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" android:exitFadeDuration="@android:integer/config_shortAnimTime">
+
+    <item android:state_pressed="true" android:drawable="@color/background_tab_pressed" />
+    <item android:state_focused="true" android:drawable="@color/background_tab_pressed"/>
+    <item android:drawable="@android:color/transparent"/>
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,9 @@
+<resources>
+
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="tab_text_normal_size">20sp</dimen>
+    <dimen name="tab_text_selected_size">20sp</dimen>
+
+</resources>
\ No newline at end of file
Index: library/build/intermediates/blame/res/androidTest/debug/multi/values.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/blame/res/androidTest/debug/multi/values.json	(revision )
+++ library/build/intermediates/blame/res/androidTest/debug/multi/values.json	(revision )
@@ -0,0 +1,26 @@
+[
+    {
+        "outputFile": "D:\\GooglePlay\\library\\build\\intermediates\\res\\merged\\androidTest\\debug\\values\\values.xml",
+        "map": [
+            {
+                "to": {
+                    "startLine": 2,
+                    "startColumn": 4,
+                    "startOffset": 55,
+                    "endColumn": 58,
+                    "endOffset": 109
+                },
+                "from": {
+                    "file": "D:\\GooglePlay\\library\\build\\intermediates\\bundles\\debug\\res\\values\\values.xml",
+                    "position": {
+                        "startLine": 2,
+                        "startColumn": 4,
+                        "startOffset": 55,
+                        "endColumn": 58,
+                        "endOffset": 109
+                    }
+                }
+            }
+        ]
+    }
+]
\ No newline at end of file
Index: library/build/intermediates/bundles/release/aapt/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/release/aapt/AndroidManifest.xml	(revision )
+++ library/build/intermediates/bundles/release/aapt/AndroidManifest.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.astuetz.pagerslidingtabstrip" >
+
+    <uses-sdk
+        android:minSdkVersion="15"
+        android:targetSdkVersion="23" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: app/src/main/res/drawable/selector_btn_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/selector_btn_bg.xml	(revision )
+++ app/src/main/res/drawable/selector_btn_bg.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:drawable="@drawable/btn_pressed" android:state_pressed="true"></item>
+    <item android:drawable="@drawable/btn_normal"></item>
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/pager_empty.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/pager_empty.xml	(revision )
+++ app/src/main/res/layout/pager_empty.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:src="@drawable/ic_empty_page" />
+
+</RelativeLayout>
\ No newline at end of file
Index: library/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml	(revision )
+++ library/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="D:\GooglePlay\library\src\main\jniLibs"/></dataSet><dataSet config="debug"><source path="D:\GooglePlay\library\src\debug\jniLibs"/></dataSet></merger>
\ No newline at end of file
Index: library/build/intermediates/bundles/release/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/bundles/release/AndroidManifest.xml	(revision )
+++ library/build/intermediates/bundles/release/AndroidManifest.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.astuetz.pagerslidingtabstrip" >
+
+    <uses-sdk
+        android:minSdkVersion="15"
+        android:targetSdkVersion="23" />
+
+    <application />
+
+</manifest>
\ No newline at end of file
Index: app/src/main/java/com/project/fragment/RecommendFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/fragment/RecommendFragment.java	(revision )
+++ app/src/main/java/com/project/fragment/RecommendFragment.java	(revision )
@@ -0,0 +1,41 @@
+package com.project.fragment;
+
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.support.annotation.Nullable;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.project.base.BaseFragment;
+import com.project.base.LoadingPager;
+import com.project.util.UIUtils;
+
+import java.util.Random;
+
+/**
+ * Created by 17895 on 2016/5/17.
+ */
+public class RecommendFragment extends BaseFragment {
+    @Override
+    public LoadingPager.LoadedResult initData() {// 真正加载数据
+        // 执行耗时的操作
+        SystemClock.sleep(2000);
+        // 随机返回3中状态中的一种
+
+        LoadingPager.LoadedResult[] arr = { LoadingPager.LoadedResult.ERROR, LoadingPager.LoadedResult.SUCCESS, LoadingPager.LoadedResult.EMPTY };
+        Random random = new Random();
+        int index = random.nextInt(arr.length);// 0 1 2
+
+        return arr[index];
+    }
+
+    @Override
+    public View initSuccessView() {
+        // 返回成功的视图
+        TextView tv = new TextView(UIUtils.getContext());
+        tv.setText(this.getClass().getSimpleName());
+        return tv;
+    }
+}
Index: library/build/intermediates/incremental/mergeReleaseAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/build/intermediates/incremental/mergeReleaseAssets/merger.xml	(revision )
+++ library/build/intermediates/incremental/mergeReleaseAssets/merger.xml	(revision )
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main"><source path="D:\GooglePlay\library\src\main\assets"/></dataSet><dataSet config="release"><source path="D:\GooglePlay\library\src\release\assets"/></dataSet></merger>
\ No newline at end of file
Index: library/src/com/astuetz/PagerSlidingTabStrip.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- library/src/com/astuetz/PagerSlidingTabStrip.java	(revision )
+++ library/src/com/astuetz/PagerSlidingTabStrip.java	(revision )
@@ -0,0 +1,578 @@
+/*
+ * Copyright (C) 2013 Andreas Stuetz <andreas.stuetz@gmail.com>
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.astuetz;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Paint.Style;
+import android.graphics.Typeface;
+import android.os.Build;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.support.v4.view.ViewPager;
+import android.support.v4.view.ViewPager.OnPageChangeListener;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.View;
+import android.view.ViewTreeObserver.OnGlobalLayoutListener;
+import android.widget.HorizontalScrollView;
+import android.widget.ImageButton;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import java.util.Locale;
+
+import com.astuetz.pagerslidingtabstrip.R;
+
+public class PagerSlidingTabStrip extends HorizontalScrollView {
+
+	public interface IconTabProvider {
+		public int getPageIconResId(int position);
+	}
+
+	// @formatter:off
+	private static final int[] ATTRS = new int[] {
+		android.R.attr.textSize,
+		android.R.attr.textColor
+    };
+	// @formatter:on
+
+	private LinearLayout.LayoutParams defaultTabLayoutParams;
+	private LinearLayout.LayoutParams expandedTabLayoutParams;
+
+	private final PageListener pageListener = new PageListener();
+	public OnPageChangeListener delegatePageListener;
+
+	private LinearLayout tabsContainer;
+	private ViewPager pager;
+
+	private int tabCount;
+
+	private int currentPosition = 0;
+	private float currentPositionOffset = 0f;
+
+	private Paint rectPaint;
+	private Paint dividerPaint;
+
+	private int indicatorColor = 0xFF666666;
+	private int underlineColor = 0x1A000000;
+	private int dividerColor = 0x1A000000;
+
+	private boolean shouldExpand = false;
+	private boolean textAllCaps = true;
+
+	private int scrollOffset = 52;
+	private int indicatorHeight = 8;
+	private int underlineHeight = 2;
+	private int dividerPadding = 12;
+	private int tabPadding = 24;
+	private int dividerWidth = 1;
+
+	private int tabTextSize = 12;
+	private int tabTextColor = 0xFF666666;
+	private Typeface tabTypeface = null;
+	private int tabTypefaceStyle = Typeface.BOLD;
+
+	private int lastScrollX = 0;
+
+	private int tabBackgroundResId = R.drawable.background_tab;
+
+	private Locale locale;
+
+	public PagerSlidingTabStrip(Context context) {
+		this(context, null);
+	}
+
+	public PagerSlidingTabStrip(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	public PagerSlidingTabStrip(Context context, AttributeSet attrs, int defStyle) {
+		super(context, attrs, defStyle);
+
+		setFillViewport(true);
+		setWillNotDraw(false);
+
+		tabsContainer = new LinearLayout(context);
+		tabsContainer.setOrientation(LinearLayout.HORIZONTAL);
+		tabsContainer.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+		addView(tabsContainer);
+
+		DisplayMetrics dm = getResources().getDisplayMetrics();
+
+		scrollOffset = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, scrollOffset, dm);
+		indicatorHeight = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, indicatorHeight, dm);
+		underlineHeight = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, underlineHeight, dm);
+		dividerPadding = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dividerPadding, dm);
+		tabPadding = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, tabPadding, dm);
+		dividerWidth = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dividerWidth, dm);
+		tabTextSize = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, tabTextSize, dm);
+
+		// get system attrs (android:textSize and android:textColor)
+
+		TypedArray a = context.obtainStyledAttributes(attrs, ATTRS);
+
+		tabTextSize = a.getDimensionPixelSize(0, tabTextSize);
+		tabTextColor = a.getColor(1, tabTextColor);
+
+		a.recycle();
+
+		// get custom attrs
+
+		a = context.obtainStyledAttributes(attrs, R.styleable.PagerSlidingTabStrip);
+
+		indicatorColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsIndicatorColor, indicatorColor);
+		underlineColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsUnderlineColor, underlineColor);
+		dividerColor = a.getColor(R.styleable.PagerSlidingTabStrip_pstsDividerColor, dividerColor);
+		indicatorHeight = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsIndicatorHeight, indicatorHeight);
+		underlineHeight = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsUnderlineHeight, underlineHeight);
+		dividerPadding = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsDividerPadding, dividerPadding);
+		tabPadding = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsTabPaddingLeftRight, tabPadding);
+		tabBackgroundResId = a.getResourceId(R.styleable.PagerSlidingTabStrip_pstsTabBackground, tabBackgroundResId);
+		shouldExpand = a.getBoolean(R.styleable.PagerSlidingTabStrip_pstsShouldExpand, shouldExpand);
+		scrollOffset = a.getDimensionPixelSize(R.styleable.PagerSlidingTabStrip_pstsScrollOffset, scrollOffset);
+		textAllCaps = a.getBoolean(R.styleable.PagerSlidingTabStrip_pstsTextAllCaps, textAllCaps);
+
+		a.recycle();
+
+		rectPaint = new Paint();
+		rectPaint.setAntiAlias(true);
+		rectPaint.setStyle(Style.FILL);
+
+		dividerPaint = new Paint();
+		dividerPaint.setAntiAlias(true);
+		dividerPaint.setStrokeWidth(dividerWidth);
+
+		defaultTabLayoutParams = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
+		expandedTabLayoutParams = new LinearLayout.LayoutParams(0, LayoutParams.MATCH_PARENT, 1.0f);
+
+		if (locale == null) {
+			locale = getResources().getConfiguration().locale;
+		}
+	}
+
+	public void setViewPager(ViewPager pager) {
+		this.pager = pager;
+
+		if (pager.getAdapter() == null) {
+			throw new IllegalStateException("ViewPager does not have adapter instance.");
+		}
+
+		pager.setOnPageChangeListener(pageListener);
+
+		notifyDataSetChanged();
+	}
+
+	public void setOnPageChangeListener(OnPageChangeListener listener) {
+		this.delegatePageListener = listener;
+	}
+
+	public void notifyDataSetChanged() {
+
+		tabsContainer.removeAllViews();
+
+		tabCount = pager.getAdapter().getCount();
+
+		for (int i = 0; i < tabCount; i++) {
+
+			if (pager.getAdapter() instanceof IconTabProvider) {
+				addIconTab(i, ((IconTabProvider) pager.getAdapter()).getPageIconResId(i));
+			} else {
+				addTextTab(i, pager.getAdapter().getPageTitle(i).toString());
+			}
+
+		}
+
+		updateTabStyles();
+
+		getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
+
+			@SuppressWarnings("deprecation")
+			@SuppressLint("NewApi")
+			@Override
+			public void onGlobalLayout() {
+
+				if (Build.VERSION.SDK_INT < 16) {
+					getViewTreeObserver().removeGlobalOnLayoutListener(this);
+				} else {
+					//getViewTreeObserver().removeOnGlobalLayoutListener(this);
+				}
+
+				currentPosition = pager.getCurrentItem();
+				scrollToChild(currentPosition, 0);
+			}
+		});
+
+	}
+
+	private void addTextTab(final int position, String title) {
+
+		TextView tab = new TextView(getContext());
+		tab.setText(title);
+		tab.setGravity(Gravity.CENTER);
+		tab.setSingleLine();
+
+		addTab(position, tab);
+	}
+
+	private void addIconTab(final int position, int resId) {
+
+		ImageButton tab = new ImageButton(getContext());
+		tab.setImageResource(resId);
+
+		addTab(position, tab);
+
+	}
+
+	private void addTab(final int position, View tab) {
+		tab.setFocusable(true);
+		tab.setOnClickListener(new OnClickListener() {
+			@Override
+			public void onClick(View v) {
+				pager.setCurrentItem(position);
+			}
+		});
+
+		tab.setPadding(tabPadding, 0, tabPadding, 0);
+		tabsContainer.addView(tab, position, shouldExpand ? expandedTabLayoutParams : defaultTabLayoutParams);
+	}
+
+	private void updateTabStyles() {
+
+		for (int i = 0; i < tabCount; i++) {
+
+			View v = tabsContainer.getChildAt(i);
+
+			v.setBackgroundResource(tabBackgroundResId);
+
+			if (v instanceof TextView) {
+
+				TextView tab = (TextView) v;
+				tab.setTextSize(TypedValue.COMPLEX_UNIT_PX, tabTextSize);
+				tab.setTypeface(tabTypeface, tabTypefaceStyle);
+				tab.setTextColor(tabTextColor);
+
+				// setAllCaps() is only available from API 14, so the upper case is made manually if we are on a
+				// pre-ICS-build
+				if (textAllCaps) {
+					if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
+						tab.setAllCaps(true);
+					} else {
+						tab.setText(tab.getText().toString().toUpperCase(locale));
+					}
+				}
+			}
+		}
+
+	}
+
+	private void scrollToChild(int position, int offset) {
+
+		if (tabCount == 0) {
+			return;
+		}
+
+		int newScrollX = tabsContainer.getChildAt(position).getLeft() + offset;
+
+		if (position > 0 || offset > 0) {
+			newScrollX -= scrollOffset;
+		}
+
+		if (newScrollX != lastScrollX) {
+			lastScrollX = newScrollX;
+			scrollTo(newScrollX, 0);
+		}
+
+	}
+
+	@Override
+	protected void onDraw(Canvas canvas) {
+		super.onDraw(canvas);
+
+		if (isInEditMode() || tabCount == 0) {
+			return;
+		}
+
+		final int height = getHeight();
+
+		// draw indicator line
+
+		rectPaint.setColor(indicatorColor);
+
+		// default: line below current tab
+		View currentTab = tabsContainer.getChildAt(currentPosition);
+		float lineLeft = currentTab.getLeft();
+		float lineRight = currentTab.getRight();
+
+		// if there is an offset, start interpolating left and right coordinates between current and next tab
+		if (currentPositionOffset > 0f && currentPosition < tabCount - 1) {
+
+			View nextTab = tabsContainer.getChildAt(currentPosition + 1);
+			final float nextTabLeft = nextTab.getLeft();
+			final float nextTabRight = nextTab.getRight();
+
+			lineLeft = (currentPositionOffset * nextTabLeft + (1f - currentPositionOffset) * lineLeft);
+			lineRight = (currentPositionOffset * nextTabRight + (1f - currentPositionOffset) * lineRight);
+		}
+
+		canvas.drawRect(lineLeft, height - indicatorHeight, lineRight, height, rectPaint);
+
+		// draw underline
+
+		rectPaint.setColor(underlineColor);
+		canvas.drawRect(0, height - underlineHeight, tabsContainer.getWidth(), height, rectPaint);
+
+		// draw divider
+
+		dividerPaint.setColor(dividerColor);
+		for (int i = 0; i < tabCount - 1; i++) {
+			View tab = tabsContainer.getChildAt(i);
+			canvas.drawLine(tab.getRight(), dividerPadding, tab.getRight(), height - dividerPadding, dividerPaint);
+		}
+	}
+
+	private class PageListener implements OnPageChangeListener {
+
+		@Override
+		public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+
+			currentPosition = position;
+			currentPositionOffset = positionOffset;
+
+			scrollToChild(position, (int) (positionOffset * tabsContainer.getChildAt(position).getWidth()));
+
+			invalidate();
+
+			if (delegatePageListener != null) {
+				delegatePageListener.onPageScrolled(position, positionOffset, positionOffsetPixels);
+			}
+		}
+
+		@Override
+		public void onPageScrollStateChanged(int state) {
+			if (state == ViewPager.SCROLL_STATE_IDLE) {
+				scrollToChild(pager.getCurrentItem(), 0);
+			}
+
+			if (delegatePageListener != null) {
+				delegatePageListener.onPageScrollStateChanged(state);
+			}
+		}
+
+		@Override
+		public void onPageSelected(int position) {
+			if (delegatePageListener != null) {
+				delegatePageListener.onPageSelected(position);
+			}
+		}
+
+	}
+
+	public void setIndicatorColor(int indicatorColor) {
+		this.indicatorColor = indicatorColor;
+		invalidate();
+	}
+
+	public void setIndicatorColorResource(int resId) {
+		this.indicatorColor = getResources().getColor(resId);
+		invalidate();
+	}
+
+	public int getIndicatorColor() {
+		return this.indicatorColor;
+	}
+
+	public void setIndicatorHeight(int indicatorLineHeightPx) {
+		this.indicatorHeight = indicatorLineHeightPx;
+		invalidate();
+	}
+
+	public int getIndicatorHeight() {
+		return indicatorHeight;
+	}
+
+	public void setUnderlineColor(int underlineColor) {
+		this.underlineColor = underlineColor;
+		invalidate();
+	}
+
+	public void setUnderlineColorResource(int resId) {
+		this.underlineColor = getResources().getColor(resId);
+		invalidate();
+	}
+
+	public int getUnderlineColor() {
+		return underlineColor;
+	}
+
+	public void setDividerColor(int dividerColor) {
+		this.dividerColor = dividerColor;
+		invalidate();
+	}
+
+	public void setDividerColorResource(int resId) {
+		this.dividerColor = getResources().getColor(resId);
+		invalidate();
+	}
+
+	public int getDividerColor() {
+		return dividerColor;
+	}
+
+	public void setUnderlineHeight(int underlineHeightPx) {
+		this.underlineHeight = underlineHeightPx;
+		invalidate();
+	}
+
+	public int getUnderlineHeight() {
+		return underlineHeight;
+	}
+
+	public void setDividerPadding(int dividerPaddingPx) {
+		this.dividerPadding = dividerPaddingPx;
+		invalidate();
+	}
+
+	public int getDividerPadding() {
+		return dividerPadding;
+	}
+
+	public void setScrollOffset(int scrollOffsetPx) {
+		this.scrollOffset = scrollOffsetPx;
+		invalidate();
+	}
+
+	public int getScrollOffset() {
+		return scrollOffset;
+	}
+
+	public void setShouldExpand(boolean shouldExpand) {
+		this.shouldExpand = shouldExpand;
+		requestLayout();
+	}
+
+	public boolean getShouldExpand() {
+		return shouldExpand;
+	}
+
+	public boolean isTextAllCaps() {
+		return textAllCaps;
+	}
+
+	public void setAllCaps(boolean textAllCaps) {
+		this.textAllCaps = textAllCaps;
+	}
+
+	public void setTextSize(int textSizePx) {
+		this.tabTextSize = textSizePx;
+		updateTabStyles();
+	}
+
+	public int getTextSize() {
+		return tabTextSize;
+	}
+
+	public void setTextColor(int textColor) {
+		this.tabTextColor = textColor;
+		updateTabStyles();
+	}
+
+	public void setTextColorResource(int resId) {
+		this.tabTextColor = getResources().getColor(resId);
+		updateTabStyles();
+	}
+
+	public int getTextColor() {
+		return tabTextColor;
+	}
+
+	public void setTypeface(Typeface typeface, int style) {
+		this.tabTypeface = typeface;
+		this.tabTypefaceStyle = style;
+		updateTabStyles();
+	}
+
+	public void setTabBackground(int resId) {
+		this.tabBackgroundResId = resId;
+	}
+
+	public int getTabBackground() {
+		return tabBackgroundResId;
+	}
+
+	public void setTabPaddingLeftRight(int paddingPx) {
+		this.tabPadding = paddingPx;
+		updateTabStyles();
+	}
+
+	public int getTabPaddingLeftRight() {
+		return tabPadding;
+	}
+
+	@Override
+	public void onRestoreInstanceState(Parcelable state) {
+		SavedState savedState = (SavedState) state;
+		super.onRestoreInstanceState(savedState.getSuperState());
+		currentPosition = savedState.currentPosition;
+		requestLayout();
+	}
+
+	@Override
+	public Parcelable onSaveInstanceState() {
+		Parcelable superState = super.onSaveInstanceState();
+		SavedState savedState = new SavedState(superState);
+		savedState.currentPosition = currentPosition;
+		return savedState;
+	}
+
+	static class SavedState extends BaseSavedState {
+		int currentPosition;
+
+		public SavedState(Parcelable superState) {
+			super(superState);
+		}
+
+		private SavedState(Parcel in) {
+			super(in);
+			currentPosition = in.readInt();
+		}
+
+		@Override
+		public void writeToParcel(Parcel dest, int flags) {
+			super.writeToParcel(dest, flags);
+			dest.writeInt(currentPosition);
+		}
+
+		public static final Parcelable.Creator<SavedState> CREATOR = new Parcelable.Creator<SavedState>() {
+			@Override
+			public SavedState createFromParcel(Parcel in) {
+				return new SavedState(in);
+			}
+
+			@Override
+			public SavedState[] newArray(int size) {
+				return new SavedState[size];
+			}
+		};
+	}
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/project/util/UIUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/util/UIUtils.java	(revision )
+++ app/src/main/java/com/project/util/UIUtils.java	(revision )
@@ -0,0 +1,73 @@
+package com.project.util;
+
+import android.R.anim;
+import android.content.Context;
+import android.content.res.Resources;
+import android.os.Handler;
+
+import com.project.base.BaseApplication;
+
+/**
+ * @author  Administrator
+ * @time 	2015-7-15 上午10:59:15
+ * @des	和ui相关的工具类
+ *
+ * @version $Rev: 8 $
+ * @updateAuthor $Author: admin $
+ * @updateDate $Date: 2015-07-15 17:06:45 +0800 (星期三, 15 七月 2015) $
+ * @updateDes TODO
+ */
+public class UIUtils {
+	/**得到上下文*/
+	public static Context getContext() {
+		return BaseApplication.getContext();
+	}
+
+	/**得到Resouce对象*/
+	public static Resources getResource() {
+		return getContext().getResources();
+	}
+
+	/**得到String.xml中的字符串*/
+	public static String getString(int resId) {
+		return getResource().getString(resId);
+	}
+
+	/**得到String.xml中的字符串数组*/
+	public static String[] getStringArr(int resId) {
+		return getResource().getStringArray(resId);
+	}
+
+	/**得到colors.xml中的颜色*/
+	public static int getColor(int colorId) {
+		return getResource().getColor(colorId);
+	}
+
+	/**得到应用程序的包名*/
+	public static String getPackageName() {
+		return getContext().getPackageName();
+	}
+
+	/**得到主线程id*/
+	public static long getMainThreadid() {
+		return BaseApplication.getMainTreadId();
+	}
+
+	/**得到主线程Handler*/
+	public static Handler getMainThreadHandler() {
+		return BaseApplication.getHandler();
+	}
+
+	/**安全的执行一个任务*/
+	public static void postTaskSafely(Runnable task) {
+		int curThreadId = android.os.Process.myTid();
+
+		if (curThreadId == getMainThreadid()) {// 如果当前线程是主线程
+			task.run();
+		} else {// 如果当前线程不是主线程
+			getMainThreadHandler().post(task);
+		}
+
+	}
+
+}
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision )
+++ .idea/inspectionProfiles/Project_Default.xml	(revision )
@@ -0,0 +1,11 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="AndroidLintAppCompatResource" enabled="false" level="ERROR" enabled_by_default="false" />
+    <inspection_tool class="AndroidLintGradleCompatiblePlugin" enabled="false" level="ERROR" enabled_by_default="false" />
+    <inspection_tool class="LoggerInitializedWithForeignClass" enabled="false" level="WARNING" enabled_by_default="false">
+      <option name="loggerClassName" value="org.apache.log4j.Logger,org.slf4j.LoggerFactory,org.apache.commons.logging.LogFactory,java.util.logging.Logger" />
+      <option name="loggerFactoryMethodName" value="getLogger,getLogger,getLog,getLogger" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
